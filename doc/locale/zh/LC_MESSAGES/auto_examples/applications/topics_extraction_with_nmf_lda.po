# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 - 2014, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.17\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-02-16 21:59+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.2.0\n"

#: ../../auto_examples/applications/topics_extraction_with_nmf_lda.rst:8
msgid ""
"Topic extraction with Non-negative Matrix Factorization and Latent "
"Dirichlet Allocation"
msgstr ""

#: ../../auto_examples/applications/topics_extraction_with_nmf_lda.rst:10
msgid ""
"This is an example of applying Non-negative Matrix Factorization and "
"Latent Dirichlet Allocation on a corpus of documents and extract additive"
" models of the topic structure of the corpus. The output is a list of "
"topics, each represented as a list of terms (weights are not shown)."
msgstr ""

#: ../../auto_examples/applications/topics_extraction_with_nmf_lda.rst:16
msgid ""
"The default parameters (n_samples / n_features / n_topics) should make "
"the example runnable in a couple of tens of seconds. You can try to "
"increase the dimensions of the problem, but be aware that the time "
"complexity is polynomial in NMF. In LDA, the time complexity is "
"proportional to (n_samples * iterations)."
msgstr ""

#: ../../auto_examples/applications/topics_extraction_with_nmf_lda.rst:23
msgid ""
"**Python source code:** :download:`topics_extraction_with_nmf_lda.py "
"<topics_extraction_with_nmf_lda.py>`"
msgstr ""

