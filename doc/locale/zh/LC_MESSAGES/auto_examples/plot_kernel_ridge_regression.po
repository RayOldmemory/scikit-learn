# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 - 2014, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.17\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-02-16 21:59+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.2.0\n"

#: ../../auto_examples/plot_kernel_ridge_regression.rst:8
msgid "Comparison of kernel ridge regression and SVR"
msgstr ""

#: ../../auto_examples/plot_kernel_ridge_regression.rst:10
msgid ""
"Both kernel ridge regression (KRR) and SVR learn a non-linear function by"
" employing the kernel trick, i.e., they learn a linear function in the "
"space induced by the respective kernel which corresponds to a non-linear "
"function in the original space. They differ in the loss functions (ridge "
"versus epsilon-insensitive loss). In contrast to SVR, fitting a KRR can "
"be done in closed-form and is typically faster for medium-sized datasets."
" On the other hand, the learned model is non-sparse and thus slower than "
"SVR at prediction-time."
msgstr ""

#: ../../auto_examples/plot_kernel_ridge_regression.rst:19
msgid ""
"This example illustrates both methods on an artificial dataset, which "
"consists of a sinusoidal target function and strong noise added to every "
"fifth datapoint. The first figure compares the learned model of KRR and "
"SVR when both complexity/regularization and bandwidth of the RBF kernel "
"are optimized using grid-search. The learned functions are very similar; "
"however, fitting KRR is approx. seven times faster than fitting SVR (both"
" with grid-search). However, prediction of 100000 target values is more "
"than tree times faster with SVR since it has learned a sparse model using"
" only approx. 1/3 of the 100 training datapoints as support vectors."
msgstr ""

#: ../../auto_examples/plot_kernel_ridge_regression.rst:29
msgid ""
"The next figure compares the time for fitting and prediction of KRR and "
"SVR for different sizes of the training set. Fitting KRR is faster than "
"SVR for medium- sized training sets (less than 1000 samples); however, "
"for larger training sets SVR scales better. With regard to prediction "
"time, SVR is faster than KRR for all sizes of the training set because of"
" the learned sparse solution. Note that the degree of sparsity and thus "
"the prediction time depends on the parameters epsilon and C of the SVR."
msgstr ""

#: ../../auto_examples/plot_kernel_ridge_regression.rst:58
msgid "**Script output**::"
msgstr ""

#: ../../auto_examples/plot_kernel_ridge_regression.rst:68
msgid ""
"**Python source code:** :download:`plot_kernel_ridge_regression.py "
"<plot_kernel_ridge_regression.py>`"
msgstr ""

#: ../../auto_examples/plot_kernel_ridge_regression.rst:73
msgid ""
"**Total running time of the example:**  51.93 seconds ( 0 minutes  51.93 "
"seconds)"
msgstr ""

