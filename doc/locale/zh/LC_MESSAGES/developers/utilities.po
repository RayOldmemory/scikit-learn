# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 - 2014, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.17\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-02-16 21:59+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.2.0\n"

#: ../../developers/utilities.rst:5
msgid "Utilities for Developers"
msgstr ""

#: ../../developers/utilities.rst:7
msgid ""
"Scikit-learn contains a number of utilities to help with development.  "
"These are located in :mod:`sklearn.utils`, and include tools in a number "
"of categories. All the following functions and classes are in the module "
":mod:`sklearn.utils`."
msgstr ""

#: ../../developers/utilities.rst:13
msgid ""
"These utilities are meant to be used internally within the scikit-learn "
"package.  They are not guaranteed to be stable between versions of "
"scikit-learn.  Backports, in particular, will be removed as the scikit-"
"learn dependencies evolve."
msgstr ""

#: ../../developers/utilities.rst:22
msgid "Validation Tools"
msgstr ""

#: ../../developers/utilities.rst:24
msgid ""
"These are tools used to check and validate input.  When you write a "
"function which accepts arrays, matrices, or sparse matrices as arguments,"
" the following should be used when applicable."
msgstr ""

#: ../../developers/utilities.rst:28
msgid ":func:`assert_all_finite`: Throw an error if array contains NaNs or Infs."
msgstr ""

#: ../../developers/utilities.rst:30
msgid ""
":func:`as_float_array`: convert input to an array of floats.  If a sparse"
" matrix is passed, a sparse matrix will be returned."
msgstr ""

#: ../../developers/utilities.rst:33
msgid ""
":func:`check_array`: convert input to 2d array, raise error on sparse "
"matrices.  Allowed sparse matrix formats can be given optionally, as well"
" as allowing 1d or nd arrays.  Calls :func:`assert_all_finite` by "
"default."
msgstr ""

#: ../../developers/utilities.rst:37
msgid ""
":func:`check_X_y`: check that X and y have consistent length, calls "
"check_array on X, and column_or_1d on y. For multilabel classification or"
" multitarget regression, specify multi_output=True, in which case "
"check_array will be called on y."
msgstr ""

#: ../../developers/utilities.rst:42
msgid ""
":func:`indexable`: check that all input arrays have consistent length and"
" can be sliced or indexed using safe_index.  This is used to validate "
"input for cross-validation."
msgstr ""

#: ../../developers/utilities.rst:46
msgid ""
"If your code relies on a random number generator, it should never use "
"functions like ``numpy.random.random`` or ``numpy.random.normal``.  This "
"approach can lead to repeatability issues in unit tests.  Instead, a "
"``numpy.random.RandomState`` object should be used, which is built from a"
" ``random_state`` argument passed to the class or function.  The function"
" :func:`check_random_state`, below, can then be used to create a random "
"number generator object."
msgstr ""

#: ../../developers/utilities.rst:54
msgid ""
":func:`check_random_state`: create a ``np.random.RandomState`` object "
"from a parameter ``random_state``."
msgstr ""

#: ../../developers/utilities.rst:57
msgid ""
"If ``random_state`` is ``None`` or ``np.random``, then a randomly-"
"initialized ``RandomState`` object is returned."
msgstr ""

#: ../../developers/utilities.rst:59
msgid ""
"If ``random_state`` is an integer, then it is used to seed a new "
"``RandomState`` object."
msgstr ""

#: ../../developers/utilities.rst:61
msgid ""
"If ``random_state`` is a ``RandomState`` object, then it is passed "
"through."
msgstr ""

#: ../../developers/utilities.rst:63
msgid "For example::"
msgstr ""

#: ../../developers/utilities.rst:73
msgid "Efficient Linear Algebra & Array Operations"
msgstr ""

#: ../../developers/utilities.rst:75
msgid ""
":func:`extmath.randomized_range_finder`: construct an orthonormal matrix "
"whose range approximates the range of the input.  This is used in "
":func:`extmath.randomized_svd`, below."
msgstr ""

#: ../../developers/utilities.rst:79
msgid ""
":func:`extmath.randomized_svd`: compute the k-truncated randomized SVD. "
"This algorithm finds the exact truncated singular values decomposition "
"using randomization to speed up the computations. It is particularly fast"
" on large matrices on which you wish to extract only a small number of "
"components."
msgstr ""

#: ../../developers/utilities.rst:85
msgid ""
":func:`arrayfuncs.cholesky_delete`: (used in "
":func:`sklearn.linear_model.least_angle.lars_path`)  Remove an item from "
"a cholesky factorization."
msgstr ""

#: ../../developers/utilities.rst:89
msgid ""
":func:`arrayfuncs.min_pos`: (used in "
"``sklearn.linear_model.least_angle``) Find the minimum of the positive "
"values within an array."
msgstr ""

#: ../../developers/utilities.rst:92
msgid ""
":func:`extmath.norm`: computes Euclidean (L2) vector norm by directly "
"calling the BLAS ``nrm2`` function.  This is more stable than "
"``scipy.linalg.norm``.  See `Fabian's blog post "
"<http://fseoane.net/blog/2011/computing-the-vector-norm/>`_ for a "
"discussion."
msgstr ""

#: ../../developers/utilities.rst:98
msgid ""
":func:`extmath.fast_logdet`: efficiently compute the log of the "
"determinant of a matrix."
msgstr ""

#: ../../developers/utilities.rst:101
msgid ""
":func:`extmath.density`: efficiently compute the density of a sparse "
"vector"
msgstr ""

#: ../../developers/utilities.rst:103
msgid ""
":func:`extmath.safe_sparse_dot`: dot product which will correctly handle "
"``scipy.sparse`` inputs.  If the inputs are dense, it is equivalent to "
"``numpy.dot``."
msgstr ""

#: ../../developers/utilities.rst:107
msgid ""
":func:`extmath.logsumexp`: compute the sum of X assuming X is in the log "
"domain. This is equivalent to calling ``np.log(np.sum(np.exp(X)))``, but "
"is robust to overflow/underflow errors.  Note that there is similar "
"functionality in ``np.logaddexp.reduce``, but because of the pairwise "
"nature of this routine, it is slower for large arrays. Scipy has a "
"similar routine in ``scipy.misc.logsumexp`` (In scipy versions < 0.10, "
"this is found in ``scipy.maxentropy.logsumexp``), but the scipy version "
"does not accept an ``axis`` keyword."
msgstr ""

#: ../../developers/utilities.rst:116
msgid ""
":func:`extmath.weighted_mode`: an extension of ``scipy.stats.mode`` which"
" allows each item to have a real-valued weight."
msgstr ""

#: ../../developers/utilities.rst:119
msgid ""
":func:`resample`: Resample arrays or sparse matrices in a consistent way."
" used in :func:`shuffle`, below."
msgstr ""

#: ../../developers/utilities.rst:122
msgid ""
":func:`shuffle`: Shuffle arrays or sparse matrices in a consistent way. "
"Used in ``sklearn.cluster.k_means``."
msgstr ""

#: ../../developers/utilities.rst:127
msgid "Efficient Random Sampling"
msgstr ""

#: ../../developers/utilities.rst:129
msgid ""
":func:`random.sample_without_replacement`: implements efficient "
"algorithms for sampling ``n_samples`` integers from a population of size "
"``n_population`` without replacement."
msgstr ""

#: ../../developers/utilities.rst:135
msgid "Efficient Routines for Sparse Matrices"
msgstr ""

#: ../../developers/utilities.rst:137
msgid ""
"The ``sklearn.utils.sparsefuncs`` cython module hosts compiled extensions"
" to efficiently process ``scipy.sparse`` data."
msgstr ""

#: ../../developers/utilities.rst:140
msgid ""
":func:`sparsefuncs.mean_variance_axis`: compute the means and variances "
"along a specified axis of a CSR matrix. Used for normalizing the "
"tolerance stopping criterion in :class:`sklearn.cluster.k_means_.KMeans`."
msgstr ""

#: ../../developers/utilities.rst:145
msgid ""
":func:`sparsefuncs.inplace_csr_row_normalize_l1` and "
":func:`sparsefuncs.inplace_csr_row_normalize_l2`: can be used to "
"normalize individual sparse samples to unit L1 or L2 norm as done in "
":class:`sklearn.preprocessing.Normalizer`."
msgstr ""

#: ../../developers/utilities.rst:150
msgid ""
":func:`sparsefuncs.inplace_csr_column_scale`: can be used to multiply the"
" columns of a CSR matrix by a constant scale (one scale per column). Used"
" for scaling features to unit standard deviation in "
":class:`sklearn.preprocessing.StandardScaler`."
msgstr ""

#: ../../developers/utilities.rst:157
msgid "Graph Routines"
msgstr ""

#: ../../developers/utilities.rst:159
msgid ""
":func:`graph.single_source_shortest_path_length`: (not currently used in "
"scikit-learn) Return the shortest path from a single source to all "
"connected nodes on a graph.  Code is adapted from `networkx "
"<https://networkx.github.io/>`_. If this is ever needed again, it would "
"be far faster to use a single iteration of Dijkstra's algorithm from "
"``graph_shortest_path``."
msgstr ""

#: ../../developers/utilities.rst:167
msgid ""
":func:`graph.graph_laplacian`: (used in "
":func:`sklearn.cluster.spectral.spectral_embedding`) Return the Laplacian"
" of a given graph.  There is specialized code for both dense and sparse "
"connectivity matrices."
msgstr ""

#: ../../developers/utilities.rst:172
msgid ""
":func:`graph_shortest_path.graph_shortest_path`: (used in "
":class:`sklearn.manifold.Isomap`) Return the shortest path between all "
"pairs of connected points on a directed or undirected graph.  Both the "
"Floyd-Warshall algorithm and Dijkstra's algorithm are available.  The "
"algorithm is most efficient when the connectivity matrix is a "
"``scipy.sparse.csr_matrix``."
msgstr ""

#: ../../developers/utilities.rst:181
msgid "Backports"
msgstr ""

#: ../../developers/utilities.rst:183
msgid ""
":func:`fixes.expit`: Logistic sigmoid function. Replacement for SciPy "
"0.10's ``scipy.special.expit``."
msgstr ""

#: ../../developers/utilities.rst:186
msgid ""
":func:`sparsetools.connected_components` (backported from "
"``scipy.sparse.connected_components`` in scipy 0.12). Used in "
"``sklearn.cluster.hierarchical``, as well as in tests for "
":mod:`sklearn.feature_extraction`."
msgstr ""

#: ../../developers/utilities.rst:191
msgid ""
":func:`fixes.isclose` (backported from ``numpy.isclose`` in numpy 1.8.1)."
" In versions before 1.7, this function was not available in numpy. Used "
"in ``sklearn.metrics``."
msgstr ""

#: ../../developers/utilities.rst:198
msgid "ARPACK"
msgstr ""

#: ../../developers/utilities.rst:200
msgid ""
":func:`arpack.eigs` (backported from ``scipy.sparse.linalg.eigs`` in "
"scipy 0.10) Sparse non-symmetric eigenvalue decomposition using the "
"Arnoldi method.  A limited version of ``eigs`` is available in earlier "
"scipy versions."
msgstr ""

#: ../../developers/utilities.rst:206
msgid ""
":func:`arpack.eigsh` (backported from ``scipy.sparse.linalg.eigsh`` in "
"scipy 0.10) Sparse non-symmetric eigenvalue decomposition using the "
"Arnoldi method.  A limited version of ``eigsh`` is available in earlier "
"scipy versions."
msgstr ""

#: ../../developers/utilities.rst:212
msgid ""
":func:`arpack.svds` (backported from ``scipy.sparse.linalg.svds`` in "
"scipy 0.10) Sparse non-symmetric eigenvalue decomposition using the "
"Arnoldi method.  A limited version of ``svds`` is available in earlier "
"scipy versions."
msgstr ""

#: ../../developers/utilities.rst:220
msgid "Benchmarking"
msgstr ""

#: ../../developers/utilities.rst:222
msgid ""
":func:`bench.total_seconds` (back-ported from ``timedelta.total_seconds``"
" in Python 2.7).  Used in ``benchmarks/bench_glm.py``."
msgstr ""

#: ../../developers/utilities.rst:227
msgid "Testing Functions"
msgstr ""

#: ../../developers/utilities.rst:229
msgid ""
":func:`testing.assert_in`, :func:`testing.assert_not_in`: Assertions for "
"container membership. Designed for forward compatibility with Nose 1.0."
msgstr ""

#: ../../developers/utilities.rst:232
msgid ""
":func:`testing.assert_raise_message`: Assertions for checking the error "
"raise message."
msgstr ""

#: ../../developers/utilities.rst:235
msgid ""
":func:`testing.mock_mldata_urlopen`: Mocks the urlopen function to fake "
"requests to mldata.org. Used in tests of :mod:`sklearn.datasets`."
msgstr ""

#: ../../developers/utilities.rst:238
msgid ""
":func:`testing.all_estimators` : returns a list of all estimators in "
"scikit-learn to test for consistent behavior and interfaces."
msgstr ""

#: ../../developers/utilities.rst:242
msgid "Multiclass and multilabel utility function"
msgstr ""

#: ../../developers/utilities.rst:244
msgid ""
":func:`multiclass.is_multilabel`: Helper function to check if the task is"
" a multi-label classification one."
msgstr ""

#: ../../developers/utilities.rst:247
msgid ""
":func:`multiclass.is_label_indicator_matrix`: Helper function to check if"
" a classification output is in label indicator matrix format."
msgstr ""

#: ../../developers/utilities.rst:250
msgid ""
":func:`multiclass.unique_labels`: Helper function to extract an ordered "
"array of unique labels from different formats of target."
msgstr ""

#: ../../developers/utilities.rst:255
msgid "Helper Functions"
msgstr ""

#: ../../developers/utilities.rst:257
msgid ""
":class:`gen_even_slices`: generator to create ``n``-packs of slices going"
" up to ``n``.  Used in ``sklearn.decomposition.dict_learning`` and "
"``sklearn.cluster.k_means``."
msgstr ""

#: ../../developers/utilities.rst:261
msgid ""
":func:`safe_mask`: Helper function to convert a mask to the format "
"expected by the numpy array or scipy sparse matrix on which to use it "
"(sparse matrices support integer indices only while numpy arrays support "
"both boolean masks and integer indices)."
msgstr ""

#: ../../developers/utilities.rst:266
msgid ""
":func:`safe_sqr`: Helper function for unified squaring (``**2``) of "
"array-likes, matrices and sparse matrices."
msgstr ""

#: ../../developers/utilities.rst:271
msgid "Hash Functions"
msgstr ""

#: ../../developers/utilities.rst:273
msgid ""
":func:`murmurhash3_32` provides a python wrapper for the "
"``MurmurHash3_x86_32`` C++ non cryptographic hash function. This hash "
"function is suitable for implementing lookup tables, Bloom filters, Count"
" Min Sketch, feature hashing and implicitly defined sparse random "
"projections::"
msgstr ""

#: ../../developers/utilities.rst:286
msgid ""
"The ``sklearn.utils.murmurhash`` module can also be \"cimported\" from "
"other cython modules so as to benefit from the high performance of "
"MurmurHash while skipping the overhead of the Python interpreter."
msgstr ""

#: ../../developers/utilities.rst:292
msgid "Warnings and Exceptions"
msgstr ""

#: ../../developers/utilities.rst:294
msgid ":class:`deprecated`: Decorator to mark a function or class as deprecated."
msgstr ""

#: ../../developers/utilities.rst:296
msgid ""
":class:`ConvergenceWarning`: Custom warning to catch convergence "
"problems. Used in ``sklearn.covariance.graph_lasso``."
msgstr ""

