# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 - 2014, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.17\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-02-16 21:59+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.2.0\n"

#: ../../modules/generated/sklearn.decomposition.FactorAnalysis.rst:2
msgid ":mod:`sklearn.decomposition`.FactorAnalysis"
msgstr ""

#: :3
msgid "Factor Analysis (FA)"
msgstr ""

#: :5
msgid "A simple linear generative model with Gaussian latent variables."
msgstr ""

#: :7
msgid ""
"The observations are assumed to be caused by a linear transformation of "
"lower dimensional latent factors and added Gaussian noise. Without loss "
"of generality the factors are distributed according to a Gaussian with "
"zero mean and unit covariance. The noise is also zero mean and has an "
"arbitrary diagonal covariance matrix."
msgstr ""

#: :13
msgid ""
"If we would restrict the model further, by assuming that the Gaussian "
"noise is even isotropic (all diagonal entries are the same) we would "
"obtain :class:`PPCA`."
msgstr ""

#: :17
msgid ""
"FactorAnalysis performs a maximum likelihood estimate of the so-called "
"`loading` matrix, the transformation of the latent variables to the "
"observed ones, using expectation-maximization (EM)."
msgstr ""

#: :21
msgid "Read more in the :ref:`User Guide <FA>`."
msgstr ""

#: :25
msgid "**n_components** : int | None"
msgstr ""

#: :27
msgid ""
"Dimensionality of latent space, the number of components of ``X`` that "
"are obtained after ``transform``. If None, n_components is set to the "
"number of features."
msgstr ""

#: :31
msgid "**tol** : float"
msgstr ""

#: :33
msgid "Stopping tolerance for EM algorithm."
msgstr ""

#: :35
msgid "**copy** : bool"
msgstr ""

#: :37
msgid ""
"Whether to make a copy of X. If ``False``, the input X gets overwritten "
"during fitting."
msgstr ""

#: :40
msgid "**max_iter** : int"
msgstr ""

#: :42
msgid "Maximum number of iterations."
msgstr ""

#: :44
msgid "**noise_variance_init** : None | array, shape=(n_features,)"
msgstr ""

#: :46
msgid ""
"The initial guess of the noise variance for each feature. If None, it "
"defaults to np.ones(n_features)"
msgstr ""

#: :49
msgid "**svd_method** : {'lapack', 'randomized'}"
msgstr ""

#: :51
msgid ""
"Which SVD method to use. If 'lapack' use standard SVD from scipy.linalg, "
"if 'randomized' use fast ``randomized_svd`` function. Defaults to "
"'randomized'. For most applications 'randomized' will be sufficiently "
"precise while providing significant speed gains. Accuracy can also be "
"improved by setting higher values for `iterated_power`. If this is not "
"sufficient, for maximum precision you should choose 'lapack'."
msgstr ""

#: :59
msgid "**iterated_power** : int, optional"
msgstr ""

#: :61
msgid ""
"Number of iterations for the power method. 3 by default. Only used if "
"``svd_method`` equals 'randomized'"
msgstr ""

#: :64
msgid "**random_state** : int or RandomState"
msgstr ""

#: :66
msgid ""
"Pseudo number generator state used for random sampling. Only used if "
"``svd_method`` equals 'randomized'"
msgstr ""

#: :71
msgid "**components_** : array, [n_components, n_features]"
msgstr ""

#: :73
msgid "Components with maximum variance."
msgstr ""

#: :75
msgid "**loglike_** : list, [n_iterations]"
msgstr ""

#: :77
msgid "The log likelihood at each iteration."
msgstr ""

#: :79
msgid "**noise_variance_** : array, shape=(n_features,)"
msgstr ""

#: :81
msgid "The estimated noise variance for each feature."
msgstr ""

#: :83
msgid "**n_iter_** : int"
msgstr ""

#: :85
msgid "Number of iterations run."
msgstr ""

#: :90
msgid ":obj:`PCA`"
msgstr ""

#: :90
msgid ""
"Principal component analysis is also a latent linear variable model which"
" however assumes equal noise variance for each feature. This extra "
"assumption makes probabilistic PCA faster as it can be computed in closed"
" form."
msgstr ""

#: :92
msgid ":obj:`FastICA`"
msgstr ""

#: :93
msgid ""
"Independent component analysis, a latent variable model with non-Gaussian"
" latent variables."
msgstr ""

#: :96
msgid "References"
msgstr ""

#: :106
msgid "Methods"
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`fit <sklearn.decomposition.FactorAnalysis.fit>`\\ (X[, y])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Fit the FactorAnalysis model to X using EM"
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`fit_transform "
"<sklearn.decomposition.FactorAnalysis.fit_transform>`\\ (X[, y])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Fit to data, then transform it."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`get_covariance "
"<sklearn.decomposition.FactorAnalysis.get_covariance>`\\ ()"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Compute data covariance with the FactorAnalysis model."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`get_params <sklearn.decomposition.FactorAnalysis.get_params>`\\ "
"([deep])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Get parameters for this estimator."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`get_precision "
"<sklearn.decomposition.FactorAnalysis.get_precision>`\\ ()"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Compute data precision matrix with the FactorAnalysis model."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`score <sklearn.decomposition.FactorAnalysis.score>`\\ (X[, y])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Compute the average log-likelihood of the samples"
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`score_samples "
"<sklearn.decomposition.FactorAnalysis.score_samples>`\\ (X)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Compute the log-likelihood of each sample"
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`set_params <sklearn.decomposition.FactorAnalysis.set_params>`\\ "
"(\\*\\*params)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Set the parameters of this estimator."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`transform <sklearn.decomposition.FactorAnalysis.transform>`\\ (X)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Apply dimensionality reduction to X using the model."
msgstr ""

#: :7 :10
msgid "**X** : array-like, shape (n_samples, n_features)"
msgstr ""

#: :9 :12
msgid "Training data."
msgstr ""

#: :13 :12
msgid "**self** :"
msgstr ""

#: :5
msgid ""
"Fits transformer to X and y with optional parameters fit_params and "
"returns a transformed version of X."
msgstr ""

#: :10
msgid "**X** : numpy array of shape [n_samples, n_features]"
msgstr ""

#: :12
msgid "Training set."
msgstr ""

#: :14
msgid "**y** : numpy array of shape [n_samples]"
msgstr ""

#: :16
msgid "Target values."
msgstr ""

#: :20
msgid "**X_new** : numpy array of shape [n_samples, n_features_new]"
msgstr ""

#: :22
msgid "Transformed array."
msgstr ""

#: :5
msgid "``cov = components_.T * components_ + diag(noise_variance)``"
msgstr ""

#: :9
msgid "**cov** : array, shape (n_features, n_features)"
msgstr ""

#: :11
msgid "Estimated covariance of data."
msgstr ""

#: :7
msgid "**deep: boolean, optional** :"
msgstr ""

#: :9
msgid ""
"If True, will return the parameters for this estimator and contained "
"subobjects that are estimators."
msgstr ""

#: :14
msgid "**params** : mapping of string to any"
msgstr ""

#: :16
msgid "Parameter names mapped to their values."
msgstr ""

#: :7
msgid "**precision** : array, shape (n_features, n_features)"
msgstr ""

#: :9
msgid "Estimated precision of data."
msgstr ""

#: :7
msgid "**X: array, shape (n_samples, n_features)** :"
msgstr ""

#: :9
msgid "The data"
msgstr ""

#: :13
msgid "**ll: float** :"
msgstr ""

#: :15
msgid "Average log-likelihood of the samples under the current model"
msgstr ""

#: :13
msgid "**ll: array, shape (n_samples,)** :"
msgstr ""

#: :15
msgid "Log-likelihood of each sample under the current model"
msgstr ""

#: :5
msgid ""
"The method works on simple estimators as well as on nested objects (such "
"as pipelines). The former have parameters of the form "
"``<component>__<parameter>`` so that it's possible to update each "
"component of a nested object."
msgstr ""

#: :5
msgid ""
"Compute the expected mean of the latent variables. See Barber, 21.2.33 "
"(or Bishop, 12.66)."
msgstr ""

#: :16
msgid "**X_new** : array-like, shape (n_samples, n_components)"
msgstr ""

#: :18
msgid "The latent variables of X."
msgstr ""

#: ../../modules/generated/sklearn.decomposition.FactorAnalysis.examples:3
msgid "Examples using ``sklearn.decomposition.FactorAnalysis``"
msgstr ""

#: ../../modules/generated/sklearn.decomposition.FactorAnalysis.examples:25
msgid ":ref:`example_decomposition_plot_pca_vs_fa_model_selection.py`"
msgstr ""

#: ../../modules/generated/sklearn.decomposition.FactorAnalysis.examples:45
msgid ":ref:`example_decomposition_plot_faces_decomposition.py`"
msgstr ""

