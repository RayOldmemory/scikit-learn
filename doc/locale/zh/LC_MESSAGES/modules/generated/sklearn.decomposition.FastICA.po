# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 - 2014, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.17\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-02-16 21:59+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.2.0\n"

#: ../../modules/generated/sklearn.decomposition.FastICA.rst:2
msgid ":mod:`sklearn.decomposition`.FastICA"
msgstr ""

#: :3
msgid "FastICA: a fast algorithm for Independent Component Analysis."
msgstr ""

#: :5
msgid "Read more in the :ref:`User Guide <ICA>`."
msgstr ""

#: :9
msgid "**n_components** : int, optional"
msgstr ""

#: :11
msgid "Number of components to use. If none is passed, all are used."
msgstr ""

#: :13
msgid "**algorithm** : {'parallel', 'deflation'}"
msgstr ""

#: :15
msgid "Apply parallel or deflational algorithm for FastICA."
msgstr ""

#: :17
msgid "**whiten** : boolean, optional"
msgstr ""

#: :19
msgid ""
"If whiten is false, the data is already considered to be whitened, and no"
" whitening is performed."
msgstr ""

#: :22
msgid "**fun** : string or function, optional. Default: 'logcosh'"
msgstr ""

#: :24
msgid ""
"The functional form of the G function used in the approximation to neg-"
"entropy. Could be either 'logcosh', 'exp', or 'cube'. You can also "
"provide your own function. It should return a tuple containing the value "
"of the function, and of its derivative, in the point. Example:"
msgstr ""

#: :32
msgid "def my_g(x):"
msgstr ""

#: :32
msgid "return x ** 3, 3 * x ** 2"
msgstr ""

#: :34
msgid "**fun_args** : dictionary, optional"
msgstr ""

#: :36
msgid ""
"Arguments to send to the functional form. If empty and if fun='logcosh', "
"fun_args will take value {'alpha' : 1.0}."
msgstr ""

#: :40
msgid "**max_iter** : int, optional"
msgstr ""

#: :42
msgid "Maximum number of iterations during fit."
msgstr ""

#: :44
msgid "**tol** : float, optional"
msgstr ""

#: :46
msgid "Tolerance on update at each iteration."
msgstr ""

#: :48
msgid "**w_init** : None of an (n_components, n_components) ndarray"
msgstr ""

#: :50
msgid "The mixing matrix to be used to initialize the algorithm."
msgstr ""

#: :52
msgid "**random_state** : int or RandomState"
msgstr ""

#: :54
msgid "Pseudo number generator state used for random sampling."
msgstr ""

#: :58
msgid "**components_** : 2D array, shape (n_components, n_features)"
msgstr ""

#: :60
msgid "The unmixing matrix."
msgstr ""

#: :62
msgid "**mixing_** : array, shape (n_features, n_components)"
msgstr ""

#: :64
msgid "The mixing matrix."
msgstr ""

#: :66
msgid "**n_iter_** : int"
msgstr ""

#: :68
msgid ""
"If the algorithm is \"deflation\", n_iter is the maximum number of "
"iterations run across all components. Else they are just the number of "
"iterations taken to converge."
msgstr ""

#: :73
msgid "Notes"
msgstr ""

#: :74
msgid ""
"Implementation based on `A. Hyvarinen and E. Oja, Independent Component "
"Analysis: Algorithms and Applications, Neural Networks, 13(4-5), 2000, "
"pp. 411-430`"
msgstr ""

#: :80
msgid "Methods"
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`fit <sklearn.decomposition.FastICA.fit>`\\ (X[, y])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Fit the model to X."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`fit_transform <sklearn.decomposition.FastICA.fit_transform>`\\ (X[,"
" y])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Fit the model and recover the sources from X."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`get_params <sklearn.decomposition.FastICA.get_params>`\\ ([deep])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Get parameters for this estimator."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`inverse_transform "
"<sklearn.decomposition.FastICA.inverse_transform>`\\ (X[, copy])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Transform the sources back to the mixed data (apply mixing matrix)."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`set_params <sklearn.decomposition.FastICA.set_params>`\\ "
"(\\*\\*params)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Set the parameters of this estimator."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`transform <sklearn.decomposition.FastICA.transform>`\\ (X[, y, "
"copy])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Recover the sources from X (apply the unmixing matrix)."
msgstr ""

#: :7
msgid "**X** : array-like, shape (n_samples, n_features)"
msgstr ""

#: :9
msgid ""
"Training data, where n_samples is the number of samples and n_features is"
" the number of features."
msgstr ""

#: :14 :12
msgid "**self** :"
msgstr ""

#: :14 :18
msgid "**X_new** : array-like, shape (n_samples, n_components)"
msgstr ""

#: :7
msgid "**deep: boolean, optional** :"
msgstr ""

#: :9
msgid ""
"If True, will return the parameters for this estimator and contained "
"subobjects that are estimators."
msgstr ""

#: :14
msgid "**params** : mapping of string to any"
msgstr ""

#: :16
msgid "Parameter names mapped to their values."
msgstr ""

#: :7
msgid "**X** : array-like, shape (n_samples, n_components)"
msgstr ""

#: :9
msgid ""
"Sources, where n_samples is the number of samples and n_components is the"
" number of components."
msgstr ""

#: :12
msgid "**copy** : bool (optional)"
msgstr ""

#: :14
msgid "If False, data passed to fit are overwritten. Defaults to True."
msgstr ""

#: :18
msgid "**X_new** : array-like, shape (n_samples, n_features)"
msgstr ""

#: :5
msgid ""
"The method works on simple estimators as well as on nested objects (such "
"as pipelines). The former have parameters of the form "
"``<component>__<parameter>`` so that it's possible to update each "
"component of a nested object."
msgstr ""

#: :9
msgid ""
"Data to transform, where n_samples is the number of samples and "
"n_features is the number of features."
msgstr ""

#: ../../modules/generated/sklearn.decomposition.FastICA.examples:3
msgid "Examples using ``sklearn.decomposition.FastICA``"
msgstr ""

#: ../../modules/generated/sklearn.decomposition.FastICA.examples:25
msgid ":ref:`example_decomposition_plot_ica_blind_source_separation.py`"
msgstr ""

#: ../../modules/generated/sklearn.decomposition.FastICA.examples:45
msgid ":ref:`example_decomposition_plot_ica_vs_pca.py`"
msgstr ""

#: ../../modules/generated/sklearn.decomposition.FastICA.examples:65
msgid ":ref:`example_decomposition_plot_faces_decomposition.py`"
msgstr ""

