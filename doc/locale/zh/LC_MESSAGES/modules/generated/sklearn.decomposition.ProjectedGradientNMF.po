# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 - 2014, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.17\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-02-16 21:59+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.2.0\n"

#: ../../modules/generated/sklearn.decomposition.ProjectedGradientNMF.rst:2
msgid ":mod:`sklearn.decomposition`.ProjectedGradientNMF"
msgstr ""

#: :3
msgid "Non-Negative Matrix Factorization (NMF)"
msgstr ""

#: :5
msgid ""
"Find two non-negative matrices (W, H) whose product approximates the non-"
" negative matrix X. This factorization can be used for example for "
"dimensionality reduction, source separation or topic extraction."
msgstr ""

#: :9
msgid "The objective function is::"
msgstr ""

#: :17
msgid "Where::"
msgstr ""

#: :22
msgid ""
"The objective function is minimized with an alternating minimization of W"
" and H."
msgstr ""

#: :25
msgid "Read more in the :ref:`User Guide <NMF>`."
msgstr ""

#: :29
msgid "**n_components** : int or None"
msgstr ""

#: :31
msgid "Number of components, if n_components is not set all features are kept."
msgstr ""

#: :34
msgid "**init** :  'random' | 'nndsvd' |  'nndsvda' | 'nndsvdar' | 'custom'"
msgstr ""

#: :36
msgid ""
"Method used to initialize the procedure. Default: 'nndsvdar' if "
"n_components < n_features, otherwise random. Valid options:"
msgstr ""

#: :41
msgid "'random': non-negative random matrices, scaled with:"
msgstr ""

#: :41
msgid "sqrt(X.mean() / n_components)"
msgstr ""

#: :44
msgid "'nndsvd': Nonnegative Double Singular Value Decomposition (NNDSVD)"
msgstr ""

#: :44
msgid "initialization (better for sparseness)"
msgstr ""

#: :47
msgid "'nndsvda': NNDSVD with zeros filled with the average of X"
msgstr ""

#: :47
msgid "(better when sparsity is not desired)"
msgstr ""

#: :51
msgid "'nndsvdar': NNDSVD with zeros filled with small random values"
msgstr ""

#: :50
msgid ""
"(generally faster, less accurate alternative to NNDSVDa for when sparsity"
" is not desired)"
msgstr ""

#: :53
msgid "'custom': use custom matrices W and H"
msgstr ""

#: :55
msgid "**solver** : 'pg' | 'cd'"
msgstr ""

#: :57
msgid ""
"Numerical solver to use: 'pg' is a Projected Gradient solver "
"(deprecated). 'cd' is a Coordinate Descent solver (recommended)."
msgstr ""

#: :61
msgid "Coordinate Descent solver."
msgstr ""

#: :64
msgid "Deprecated Projected Gradient solver."
msgstr ""

#: :67
msgid "**tol** : double, default: 1e-4"
msgstr ""

#: :69
msgid "Tolerance value used in stopping conditions."
msgstr ""

#: :71
msgid "**max_iter** : integer, default: 200"
msgstr ""

#: :73
msgid "Number of iterations to compute."
msgstr ""

#: :75
msgid "**random_state** : integer seed, RandomState instance, or None (default)"
msgstr ""

#: :77
msgid "Random number generator seed control."
msgstr ""

#: :79
msgid "**alpha** : double, default: 0."
msgstr ""

#: :81
msgid ""
"Constant that multiplies the regularization terms. Set it to zero to have"
" no regularization."
msgstr ""

#: :84
msgid "*alpha* used in the Coordinate Descent solver."
msgstr ""

#: :87
msgid "**l1_ratio** : double, default: 0."
msgstr ""

#: :89
msgid ""
"The regularization mixing parameter, with 0 <= l1_ratio <= 1. For "
"l1_ratio = 0 the penalty is an elementwise L2 penalty (aka Frobenius "
"Norm). For l1_ratio = 1 it is an elementwise L1 penalty. For 0 < l1_ratio"
" < 1, the penalty is a combination of L1 and L2."
msgstr ""

#: :95
msgid "Regularization parameter *l1_ratio* used in the Coordinate Descent solver."
msgstr ""

#: :98
msgid "**shuffle** : boolean, default: False"
msgstr ""

#: :100
msgid "If true, randomize the order of coordinates in the CD solver."
msgstr ""

#: :102
msgid "*shuffle* parameter used in the Coordinate Descent solver."
msgstr ""

#: :105
msgid "**nls_max_iter** : integer, default: 2000"
msgstr ""

#: :107
msgid ""
"Number of iterations in NLS subproblem. Used only in the deprecated 'pg' "
"solver."
msgstr ""

#: :110 :119 :128 :137
msgid ""
"Deprecated Projected Gradient solver. Use Coordinate Descent solver "
"instead."
msgstr ""

#: :114
msgid "**sparseness** : 'data' | 'components' | None, default: None"
msgstr ""

#: :116
msgid ""
"Where to enforce sparsity in the model. Used only in the deprecated 'pg' "
"solver."
msgstr ""

#: :123
msgid "**beta** : double, default: 1"
msgstr ""

#: :125
msgid ""
"Degree of sparseness, if sparseness is not None. Larger values mean more "
"sparseness. Used only in the deprecated 'pg' solver."
msgstr ""

#: :132
msgid "**eta** : double, default: 0.1"
msgstr ""

#: :134
msgid ""
"Degree of correctness to maintain, if sparsity is not None. Smaller "
"values mean larger error. Used only in the deprecated 'pg' solver."
msgstr ""

#: :143
msgid "**components_** : array, [n_components, n_features]"
msgstr ""

#: :145
msgid "Non-negative components of the data."
msgstr ""

#: :147
msgid "**reconstruction_err_** : number"
msgstr ""

#: :149
msgid ""
"Frobenius norm of the matrix difference between the training data and the"
" reconstructed data from the fit produced by the model. ``|| X - WH "
"||_2``"
msgstr ""

#: :153 :21 :33 :19
msgid "**n_iter_** : int"
msgstr ""

#: :155
msgid "Actual number of iterations."
msgstr ""

#: :158
msgid "References"
msgstr ""

#: :159
msgid ""
"C.-J. Lin. Projected gradient methods for non-negative matrix "
"factorization. Neural Computation, 19(2007), 2756-2779. "
"http://www.csie.ntu.edu.tw/~cjlin/nmf/"
msgstr ""

#: :163
msgid ""
"Cichocki, Andrzej, and P. H. A. N. Anh-Huy. \"Fast local algorithms for "
"large scale nonnegative matrix and tensor factorizations.\" IEICE "
"transactions on fundamentals of electronics, communications and computer "
"sciences 92.3: 708-721, 2009."
msgstr ""

#: :171
msgid "Examples"
msgstr ""

#: :188
msgid "Methods"
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`fit <sklearn.decomposition.ProjectedGradientNMF.fit>`\\ (X[, y])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Learn a NMF model for the data X."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`fit_transform "
"<sklearn.decomposition.ProjectedGradientNMF.fit_transform>`\\ (X[, y, W, "
"H])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Learn a NMF model for the data X and returns the transformed data."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`get_params "
"<sklearn.decomposition.ProjectedGradientNMF.get_params>`\\ ([deep])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Get parameters for this estimator."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`set_params "
"<sklearn.decomposition.ProjectedGradientNMF.set_params>`\\ (\\*\\*params)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Set the parameters of this estimator."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`transform <sklearn.decomposition.ProjectedGradientNMF.transform>`\\"
" (X)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Transform the data X according to the fitted NMF model"
msgstr ""

#: :3
msgid ""
"DEPRECATED: It will be removed in release 0.19. Use NMF instead.'pg' "
"solver is still available until release 0.19."
msgstr ""

#: :7 :9
msgid "**X: {array-like, sparse matrix}, shape (n_samples, n_features)** :"
msgstr ""

#: :9 :11
msgid "Data matrix to be decomposed"
msgstr ""

#: :13 :12
msgid "**self** :"
msgstr ""

#: :17 :29
msgid "**components_** : array-like, shape (n_components, n_features)"
msgstr ""

#: :19 :31
msgid "Factorization matrix, sometimes called 'dictionary'."
msgstr ""

#: :23 :35 :21
msgid "Actual number of iterations for the transform."
msgstr ""

#: :5
msgid "This is more efficient than calling fit followed by transform."
msgstr ""

#: :13
msgid "**W** : array-like, shape (n_samples, n_components)"
msgstr ""

#: :15 :19
msgid "If init='custom', it is used as initial guess for the solution."
msgstr ""

#: :17
msgid "**H** : array-like, shape (n_components, n_features)"
msgstr ""

#: :23 :13
msgid "**W: array, shape (n_samples, n_components)** :"
msgstr ""

#: :25
msgid "Transformed data."
msgstr ""

#: :7
msgid "**deep: boolean, optional** :"
msgstr ""

#: :9
msgid ""
"If True, will return the parameters for this estimator and contained "
"subobjects that are estimators."
msgstr ""

#: :14
msgid "**params** : mapping of string to any"
msgstr ""

#: :16
msgid "Parameter names mapped to their values."
msgstr ""

#: :5
msgid ""
"The method works on simple estimators as well as on nested objects (such "
"as pipelines). The former have parameters of the form "
"``<component>__<parameter>`` so that it's possible to update each "
"component of a nested object."
msgstr ""

#: :9
msgid "Data matrix to be transformed by the model"
msgstr ""

#: :15
msgid "Transformed data"
msgstr ""

