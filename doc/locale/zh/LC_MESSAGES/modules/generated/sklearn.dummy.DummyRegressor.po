# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 - 2014, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.17\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-02-16 21:59+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.2.0\n"

#: ../../modules/generated/sklearn.dummy.DummyRegressor.rst:2
msgid ":mod:`sklearn.dummy`.DummyRegressor"
msgstr ""

#: :3
msgid "DummyRegressor is a regressor that makes predictions using simple rules."
msgstr ""

#: :6
msgid ""
"This regressor is useful as a simple baseline to compare with other "
"(real) regressors. Do not use it for real problems."
msgstr ""

#: :9
msgid "Read more in the :ref:`User Guide <dummy_estimators>`."
msgstr ""

#: :13
msgid "**strategy** : str"
msgstr ""

#: :15
msgid "Strategy to use to generate predictions."
msgstr ""

#: :17
msgid "\"mean\": always predicts the mean of the training set"
msgstr ""

#: :18
msgid "\"median\": always predicts the median of the training set"
msgstr ""

#: :19
msgid ""
"\"quantile\": always predicts a specified quantile of the training set, "
"provided with the quantile parameter."
msgstr ""

#: :21
msgid ""
"\"constant\": always predicts a constant value that is provided by the "
"user."
msgstr ""

#: :24
msgid "**constant** : int or float or array of shape = [n_outputs]"
msgstr ""

#: :26
msgid ""
"The explicit constant as predicted by the \"constant\" strategy. This "
"parameter is useful only for the \"constant\" strategy."
msgstr ""

#: :29
msgid "**quantile** : float in [0.0, 1.0]"
msgstr ""

#: :31
msgid ""
"The quantile to predict using the \"quantile\" strategy. A quantile of "
"0.5 corresponds to the median, while 0.0 to the minimum and 1.0 to the "
"maximum."
msgstr ""

#: :37
msgid "**constant_** : float or array of shape [n_outputs]"
msgstr ""

#: :39
msgid ""
"Mean or median or quantile of the training targets or constant value "
"given by the user."
msgstr ""

#: :42
msgid "**n_outputs_** : int,"
msgstr ""

#: :44
msgid "Number of outputs."
msgstr ""

#: :46
msgid "**outputs_2d_** : bool,"
msgstr ""

#: :48
msgid "True if the output at fit is 2d, else false."
msgstr ""

#: :51
msgid "Methods"
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`fit <sklearn.dummy.DummyRegressor.fit>`\\ (X, y[, sample_weight])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Fit the random regressor."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`get_params <sklearn.dummy.DummyRegressor.get_params>`\\ ([deep])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Get parameters for this estimator."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`predict <sklearn.dummy.DummyRegressor.predict>`\\ (X)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Perform classification on test vectors X."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`score <sklearn.dummy.DummyRegressor.score>`\\ (X, y[, "
"sample_weight])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Returns the coefficient of determination R^2 of the prediction."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`set_params <sklearn.dummy.DummyRegressor.set_params>`\\ "
"(\\*\\*params)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Set the parameters of this estimator."
msgstr ""

#: :7
msgid "**X** : {array-like, sparse matrix}, shape = [n_samples, n_features]"
msgstr ""

#: :9
msgid ""
"Training vectors, where n_samples is the number of samples and n_features"
" is the number of features."
msgstr ""

#: :12
msgid "**y** : array-like, shape = [n_samples] or [n_samples, n_outputs]"
msgstr ""

#: :14
msgid "Target values."
msgstr ""

#: :16
msgid "**sample_weight** : array-like of shape = [n_samples], optional"
msgstr ""

#: :18 :25
msgid "Sample weights."
msgstr ""

#: :22
msgid "**self** : object"
msgstr ""

#: :24
msgid "Returns self."
msgstr ""

#: :7
msgid "**deep: boolean, optional** :"
msgstr ""

#: :9
msgid ""
"If True, will return the parameters for this estimator and contained "
"subobjects that are estimators."
msgstr ""

#: :14
msgid "**params** : mapping of string to any"
msgstr ""

#: :16
msgid "Parameter names mapped to their values."
msgstr ""

#: :9
msgid ""
"Input vectors, where n_samples is the number of samples and n_features is"
" the number of features."
msgstr ""

#: :14
msgid "**y** : array, shape = [n_samples]  or [n_samples, n_outputs]"
msgstr ""

#: :16
msgid "Predicted target values for X."
msgstr ""

#: :5
msgid ""
"The coefficient R^2 is defined as (1 - u/v), where u is the regression "
"sum of squares ((y_true - y_pred) ** 2).sum() and v is the residual sum "
"of squares ((y_true - y_true.mean()) ** 2).sum(). Best possible score is "
"1.0 and it can be negative (because the model can be arbitrarily worse). "
"A constant model that always predicts the expected value of y, "
"disregarding the input features, would get a R^2 score of 0.0."
msgstr ""

#: :15
msgid "**X** : array-like, shape = (n_samples, n_features)"
msgstr ""

#: :17
msgid "Test samples."
msgstr ""

#: :19
msgid "**y** : array-like, shape = (n_samples) or (n_samples, n_outputs)"
msgstr ""

#: :21
msgid "True values for X."
msgstr ""

#: :23
msgid "**sample_weight** : array-like, shape = [n_samples], optional"
msgstr ""

#: :29
msgid "**score** : float"
msgstr ""

#: :31
msgid "R^2 of self.predict(X) wrt. y."
msgstr ""

#: :5
msgid ""
"The method works on simple estimators as well as on nested objects (such "
"as pipelines). The former have parameters of the form "
"``<component>__<parameter>`` so that it's possible to update each "
"component of a nested object."
msgstr ""

#: :12
msgid "**self** :"
msgstr ""

