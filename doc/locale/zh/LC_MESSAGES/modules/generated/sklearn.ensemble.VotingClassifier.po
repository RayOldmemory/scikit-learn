# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 - 2014, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.17\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-02-16 21:59+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.2.0\n"

#: ../../modules/generated/sklearn.ensemble.VotingClassifier.rst:2
msgid ":mod:`sklearn.ensemble`.VotingClassifier"
msgstr ""

#: :3
msgid "Soft Voting/Majority Rule classifier for unfitted estimators."
msgstr ""

#: :7
msgid "Read more in the :ref:`User Guide <voting_classifier>`."
msgstr ""

#: :11
msgid "**estimators** : list of (string, estimator) tuples"
msgstr ""

#: :13
msgid ""
"Invoking the ``fit`` method on the ``VotingClassifier`` will fit clones "
"of those original estimators that will be stored in the class attribute "
"`self.estimators_`."
msgstr ""

#: :17
msgid "**voting** : str, {'hard', 'soft'} (default='hard')"
msgstr ""

#: :19
msgid ""
"If 'hard', uses predicted class labels for majority rule voting. Else if "
"'soft', predicts the class label based on the argmax of the sums of the "
"predicted probalities, which is recommended for an ensemble of well-"
"calibrated classifiers."
msgstr ""

#: :24
msgid ""
"**weights** : array-like, shape = [n_classifiers], optional "
"(default=`None`)"
msgstr ""

#: :26
msgid ""
"Sequence of weights (`float` or `int`) to weight the occurances of "
"predicted class labels (`hard` voting) or class probabilities before "
"averaging (`soft` voting). Uses uniform weights if `None`."
msgstr ""

#: :32
msgid "**classes_** : array-like, shape = [n_predictions]"
msgstr ""

#: :35
msgid "Examples"
msgstr ""

#: :65
msgid "Methods"
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`fit <sklearn.ensemble.VotingClassifier.fit>`\\ (X, y)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Fit the estimators."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`fit_transform <sklearn.ensemble.VotingClassifier.fit_transform>`\\ "
"(X[, y])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Fit to data, then transform it."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`get_params <sklearn.ensemble.VotingClassifier.get_params>`\\ "
"([deep])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Return estimator parameter names for GridSearch support"
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`predict <sklearn.ensemble.VotingClassifier.predict>`\\ (X)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Predict class labels for X."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`score <sklearn.ensemble.VotingClassifier.score>`\\ (X, y[, "
"sample_weight])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Returns the mean accuracy on the given test data and labels."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`set_params <sklearn.ensemble.VotingClassifier.set_params>`\\ "
"(\\*\\*params)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Set the parameters of this estimator."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`transform <sklearn.ensemble.VotingClassifier.transform>`\\ (X)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Return class labels or probabilities for X for each estimator."
msgstr ""

#: :7
msgid "**X** : {array-like, sparse matrix}, shape = [n_samples, n_features]"
msgstr ""

#: :9
msgid ""
"Training vectors, where n_samples is the number of samples and n_features"
" is the number of features."
msgstr ""

#: :12
msgid "**y** : array-like, shape = [n_samples]"
msgstr ""

#: :14 :16
msgid "Target values."
msgstr ""

#: :18
msgid "**self** : object"
msgstr ""

#: :5
msgid ""
"Fits transformer to X and y with optional parameters fit_params and "
"returns a transformed version of X."
msgstr ""

#: :10
msgid "**X** : numpy array of shape [n_samples, n_features]"
msgstr ""

#: :12
msgid "Training set."
msgstr ""

#: :14
msgid "**y** : numpy array of shape [n_samples]"
msgstr ""

#: :20
msgid "**X_new** : numpy array of shape [n_samples, n_features_new]"
msgstr ""

#: :22
msgid "Transformed array."
msgstr ""

#: :14
msgid "**maj** : array-like, shape = [n_samples]"
msgstr ""

#: :16
msgid "Predicted class labels."
msgstr ""

#: :3
msgid "Compute probabilities of possible outcomes for samples in X."
msgstr ""

#: :14
msgid "**avg** : array-like, shape = [n_samples, n_classes]"
msgstr ""

#: :16
msgid "Weighted average probability for each class per sample."
msgstr ""

#: :5
msgid ""
"In multi-label classification, this is the subset accuracy which is a "
"harsh metric since you require for each sample that each label set be "
"correctly predicted."
msgstr ""

#: :11
msgid "**X** : array-like, shape = (n_samples, n_features)"
msgstr ""

#: :13
msgid "Test samples."
msgstr ""

#: :15
msgid "**y** : array-like, shape = (n_samples) or (n_samples, n_outputs)"
msgstr ""

#: :17
msgid "True labels for X."
msgstr ""

#: :19
msgid "**sample_weight** : array-like, shape = [n_samples], optional"
msgstr ""

#: :21
msgid "Sample weights."
msgstr ""

#: :25
msgid "**score** : float"
msgstr ""

#: :27
msgid "Mean accuracy of self.predict(X) wrt. y."
msgstr ""

#: :5
msgid ""
"The method works on simple estimators as well as on nested objects (such "
"as pipelines). The former have parameters of the form "
"``<component>__<parameter>`` so that it's possible to update each "
"component of a nested object."
msgstr ""

#: :12
msgid "**self** :"
msgstr ""

#: :14
msgid "**If `voting='soft'`:** :"
msgstr ""

#: :17
msgid "array-like = [n_classifiers, n_samples, n_classes]"
msgstr ""

#: :17
msgid "Class probabilties calculated by each classifier."
msgstr ""

#: :19
msgid "**If `voting='hard'`:** :"
msgstr ""

#: :21
msgid "array-like = [n_classifiers, n_samples]"
msgstr ""

#: :22
msgid "Class labels predicted by each classifier."
msgstr ""

#: ../../modules/generated/sklearn.ensemble.VotingClassifier.examples:3
msgid "Examples using ``sklearn.ensemble.VotingClassifier``"
msgstr ""

#: ../../modules/generated/sklearn.ensemble.VotingClassifier.examples:25
msgid ":ref:`example_ensemble_plot_voting_decision_regions.py`"
msgstr ""

#: ../../modules/generated/sklearn.ensemble.VotingClassifier.examples:45
msgid ":ref:`example_ensemble_plot_voting_probas.py`"
msgstr ""

