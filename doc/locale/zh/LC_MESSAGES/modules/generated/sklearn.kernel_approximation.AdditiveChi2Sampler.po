# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 - 2014, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.17\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-02-16 21:59+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.2.0\n"

#: ../../modules/generated/sklearn.kernel_approximation.AdditiveChi2Sampler.rst:2
msgid ":mod:`sklearn.kernel_approximation`.AdditiveChi2Sampler"
msgstr ""

#: :3
msgid "Approximate feature map for additive chi2 kernel."
msgstr ""

#: :5
msgid ""
"Uses sampling the fourier transform of the kernel characteristic at "
"regular intervals."
msgstr ""

#: :8
msgid ""
"Since the kernel that is to be approximated is additive, the components "
"of the input vectors can be treated separately.  Each entry in the "
"original space is transformed into 2*sample_steps+1 features, where "
"sample_steps is a parameter of the method. Typical values of sample_steps"
" include 1, 2 and 3."
msgstr ""

#: :14
msgid ""
"Optimal choices for the sampling interval for certain data ranges can be "
"computed (see the reference). The default values should be reasonable."
msgstr ""

#: :17
msgid "Read more in the :ref:`User Guide <additive_chi_kernel_approx>`."
msgstr ""

#: :21
msgid "**sample_steps** : int, optional"
msgstr ""

#: :23
msgid "Gives the number of (complex) sampling points."
msgstr ""

#: :25
msgid "**sample_interval** : float, optional"
msgstr ""

#: :27
msgid "Sampling interval. Must be specified when sample_steps not in {1,2,3}."
msgstr ""

#: :32
msgid ":obj:`SkewedChi2Sampler`"
msgstr ""

#: :32
msgid ""
"A Fourier-approximation to a non-additive variant of the chi squared "
"kernel."
msgstr ""

#: :35
msgid ":obj:`sklearn.metrics.pairwise.chi2_kernel`"
msgstr ""

#: :35
msgid "The exact chi squared kernel."
msgstr ""

#: :37
msgid ":obj:`sklearn.metrics.pairwise.additive_chi2_kernel`"
msgstr ""

#: :38
msgid "The exact additive chi squared kernel."
msgstr ""

#: :41
msgid "Notes"
msgstr ""

#: :42
msgid ""
"This estimator approximates a slightly different version of the additive "
"chi squared kernel then ``metric.additive_chi2`` computes."
msgstr ""

#: :46
msgid "References"
msgstr ""

#: :47
msgid ""
"See `\"Efficient additive kernels via explicit feature maps\" "
"<http://www.robots.ox.ac.uk/~vedaldi/assets/pubs/vedaldi11efficient.pdf>`_"
" A. Vedaldi and A. Zisserman, Pattern Analysis and Machine Intelligence, "
"2011"
msgstr ""

#: :55
msgid "Methods"
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`fit <sklearn.kernel_approximation.AdditiveChi2Sampler.fit>`\\ (X[, "
"y])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Set parameters."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`fit_transform "
"<sklearn.kernel_approximation.AdditiveChi2Sampler.fit_transform>`\\ (X[, "
"y])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Fit to data, then transform it."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`get_params "
"<sklearn.kernel_approximation.AdditiveChi2Sampler.get_params>`\\ ([deep])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Get parameters for this estimator."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`set_params "
"<sklearn.kernel_approximation.AdditiveChi2Sampler.set_params>`\\ "
"(\\*\\*params)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Set the parameters of this estimator."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`transform "
"<sklearn.kernel_approximation.AdditiveChi2Sampler.transform>`\\ (X[, y])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Apply approximate feature map to X."
msgstr ""

#: :5
msgid ""
"Fits transformer to X and y with optional parameters fit_params and "
"returns a transformed version of X."
msgstr ""

#: :10
msgid "**X** : numpy array of shape [n_samples, n_features]"
msgstr ""

#: :12
msgid "Training set."
msgstr ""

#: :14
msgid "**y** : numpy array of shape [n_samples]"
msgstr ""

#: :16
msgid "Target values."
msgstr ""

#: :20
msgid "**X_new** : numpy array of shape [n_samples, n_features_new]"
msgstr ""

#: :22
msgid "Transformed array."
msgstr ""

#: :7
msgid "**deep: boolean, optional** :"
msgstr ""

#: :9
msgid ""
"If True, will return the parameters for this estimator and contained "
"subobjects that are estimators."
msgstr ""

#: :14
msgid "**params** : mapping of string to any"
msgstr ""

#: :16
msgid "Parameter names mapped to their values."
msgstr ""

#: :5
msgid ""
"The method works on simple estimators as well as on nested objects (such "
"as pipelines). The former have parameters of the form "
"``<component>__<parameter>`` so that it's possible to update each "
"component of a nested object."
msgstr ""

#: :12
msgid "**self** :"
msgstr ""

#: :7
msgid "**X** : {array-like, sparse matrix}, shape = (n_samples, n_features)"
msgstr ""

#: :11
msgid ""
"**X_new** : {array, sparse matrix},                shape = (n_samples, "
"n_features * (2*sample_steps + 1))"
msgstr ""

#: :13
msgid ""
"Whether the return value is an array of sparse matrix depends on the type"
" of the input X."
msgstr ""

