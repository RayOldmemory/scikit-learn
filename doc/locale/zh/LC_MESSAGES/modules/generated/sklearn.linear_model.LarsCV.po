# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 - 2014, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.17\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-02-16 21:59+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.2.0\n"

#: ../../modules/generated/sklearn.linear_model.LarsCV.rst:2
msgid ":mod:`sklearn.linear_model`.LarsCV"
msgstr ""

#: :3
msgid "Cross-validated Least Angle Regression model"
msgstr ""

#: :5
msgid "Read more in the :ref:`User Guide <least_angle_regression>`."
msgstr ""

#: :9
msgid "**fit_intercept** : boolean"
msgstr ""

#: :11
msgid ""
"whether to calculate the intercept for this model. If set to false, no "
"intercept will be used in calculations (e.g. data is expected to be "
"already centered)."
msgstr ""

#: :15
msgid "**positive** : boolean (default=False)"
msgstr ""

#: :17
msgid ""
"Restrict coefficients to be >= 0. Be aware that you might want to remove "
"fit_intercept which is set True by default."
msgstr ""

#: :20
msgid "**verbose** : boolean or integer, optional"
msgstr ""

#: :22
msgid "Sets the verbosity amount"
msgstr ""

#: :24
msgid "**normalize** : boolean, optional, default False"
msgstr ""

#: :26
msgid "If True, the regressors X will be normalized before regression."
msgstr ""

#: :28
msgid "**copy_X** : boolean, optional, default True"
msgstr ""

#: :30
msgid "If ``True``, X will be copied; else, it may be overwritten."
msgstr ""

#: :32
msgid "**precompute** : True | False | 'auto' | array-like"
msgstr ""

#: :34
msgid ""
"Whether to use a precomputed Gram matrix to speed up calculations. If set"
" to ``'auto'`` let us decide. The Gram matrix can also be passed as "
"argument."
msgstr ""

#: :38
msgid "**max_iter: integer, optional** :"
msgstr ""

#: :40
msgid "Maximum number of iterations to perform."
msgstr ""

#: :42
msgid "**cv** : int, cross-validation generator or an iterable, optional"
msgstr ""

#: :44
msgid ""
"Determines the cross-validation splitting strategy. Possible inputs for "
"cv are:"
msgstr ""

#: :47
msgid "None, to use the default 3-fold cross-validation,"
msgstr ""

#: :48
msgid "integer, to specify the number of folds."
msgstr ""

#: :49
msgid "An object to be used as a cross-validation generator."
msgstr ""

#: :50
msgid "An iterable yielding train/test splits."
msgstr ""

#: :52
msgid "For integer/None inputs, :class:`KFold` is used."
msgstr ""

#: :54
msgid ""
"Refer :ref:`User Guide <cross_validation>` for the various cross-"
"validation strategies that can be used here."
msgstr ""

#: :57
msgid "**max_n_alphas** : integer, optional"
msgstr ""

#: :59
msgid ""
"The maximum number of points on the path used to compute the residuals in"
" the cross-validation"
msgstr ""

#: :62
msgid "**n_jobs** : integer, optional"
msgstr ""

#: :64
msgid ""
"Number of CPUs to use during the cross validation. If ``-1``, use all the"
" CPUs"
msgstr ""

#: :67
msgid "**eps** : float, optional"
msgstr ""

#: :69
msgid ""
"The machine-precision regularization in the computation of the Cholesky "
"diagonal factors. Increase this for very ill-conditioned systems."
msgstr ""

#: :75
msgid "**coef_** : array, shape (n_features,)"
msgstr ""

#: :77
msgid "parameter vector (w in the formulation formula)"
msgstr ""

#: :79
msgid "**intercept_** : float"
msgstr ""

#: :81
msgid "independent term in decision function"
msgstr ""

#: :83
msgid "**coef_path_** : array, shape (n_features, n_alphas)"
msgstr ""

#: :85
msgid "the varying values of the coefficients along the path"
msgstr ""

#: :87
msgid "**alpha_** : float"
msgstr ""

#: :89
msgid "the estimated regularization parameter alpha"
msgstr ""

#: :91
msgid "**alphas_** : array, shape (n_alphas,)"
msgstr ""

#: :93
msgid "the different values of alpha along the path"
msgstr ""

#: :95
msgid "**cv_alphas_** : array, shape (n_cv_alphas,)"
msgstr ""

#: :97
msgid "all the values of alpha along the path for the different folds"
msgstr ""

#: :99
msgid "**cv_mse_path_** : array, shape (n_folds, n_cv_alphas)"
msgstr ""

#: :101
msgid ""
"the mean square error on left-out for each fold along the path (alpha "
"values given by ``cv_alphas``)"
msgstr ""

#: :104
msgid "**n_iter_** : array-like or int"
msgstr ""

#: :106
msgid "the number of iterations run by Lars with the optimal alpha."
msgstr ""

#: :110
msgid ":obj:`lars_path`, :obj:`LassoLars`, :obj:`LassoLarsCV`"
msgstr ""

#: :113
msgid "Methods"
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`decision_function "
"<sklearn.linear_model.LarsCV.decision_function>`\\ (\\*args, "
"\\*\\*kwargs)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "DEPRECATED:  and will be removed in 0.19."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`fit <sklearn.linear_model.LarsCV.fit>`\\ (X, y)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Fit the model using X, y as training data."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`get_params <sklearn.linear_model.LarsCV.get_params>`\\ ([deep])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Get parameters for this estimator."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`predict <sklearn.linear_model.LarsCV.predict>`\\ (X)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Predict using the linear model"
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`score <sklearn.linear_model.LarsCV.score>`\\ (X, y[, sample_weight])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Returns the coefficient of determination R^2 of the prediction."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`set_params <sklearn.linear_model.LarsCV.set_params>`\\ "
"(\\*\\*params)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Set the parameters of this estimator."
msgstr ""

#: :5
msgid "Decision function of the linear model."
msgstr ""

#: :9 :7
msgid "**X** : {array-like, sparse matrix}, shape = (n_samples, n_features)"
msgstr ""

#: :11 :9
msgid "Samples."
msgstr ""

#: :15 :13
msgid "**C** : array, shape = (n_samples,)"
msgstr ""

#: :17 :15
msgid "Returns predicted values."
msgstr ""

#: :7
msgid "**X** : array-like, shape (n_samples, n_features)"
msgstr ""

#: :9
msgid "Training data."
msgstr ""

#: :11
msgid "**y** : array-like, shape (n_samples,)"
msgstr ""

#: :13
msgid "Target values."
msgstr ""

#: :17
msgid "**self** : object"
msgstr ""

#: :19
msgid "returns an instance of self."
msgstr ""

#: :7
msgid "**deep: boolean, optional** :"
msgstr ""

#: :9
msgid ""
"If True, will return the parameters for this estimator and contained "
"subobjects that are estimators."
msgstr ""

#: :14
msgid "**params** : mapping of string to any"
msgstr ""

#: :16
msgid "Parameter names mapped to their values."
msgstr ""

#: :5
msgid ""
"The coefficient R^2 is defined as (1 - u/v), where u is the regression "
"sum of squares ((y_true - y_pred) ** 2).sum() and v is the residual sum "
"of squares ((y_true - y_true.mean()) ** 2).sum(). Best possible score is "
"1.0 and it can be negative (because the model can be arbitrarily worse). "
"A constant model that always predicts the expected value of y, "
"disregarding the input features, would get a R^2 score of 0.0."
msgstr ""

#: :15
msgid "**X** : array-like, shape = (n_samples, n_features)"
msgstr ""

#: :17
msgid "Test samples."
msgstr ""

#: :19
msgid "**y** : array-like, shape = (n_samples) or (n_samples, n_outputs)"
msgstr ""

#: :21
msgid "True values for X."
msgstr ""

#: :23
msgid "**sample_weight** : array-like, shape = [n_samples], optional"
msgstr ""

#: :25
msgid "Sample weights."
msgstr ""

#: :29
msgid "**score** : float"
msgstr ""

#: :31
msgid "R^2 of self.predict(X) wrt. y."
msgstr ""

#: :5
msgid ""
"The method works on simple estimators as well as on nested objects (such "
"as pipelines). The former have parameters of the form "
"``<component>__<parameter>`` so that it's possible to update each "
"component of a nested object."
msgstr ""

#: :12
msgid "**self** :"
msgstr ""

