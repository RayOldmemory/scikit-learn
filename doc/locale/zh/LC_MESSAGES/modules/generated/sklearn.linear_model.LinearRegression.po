# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 - 2014, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.17\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-02-16 21:59+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.2.0\n"

#: ../../modules/generated/sklearn.linear_model.LinearRegression.rst:2
msgid ":mod:`sklearn.linear_model`.LinearRegression"
msgstr ""

#: :3
msgid "Ordinary least squares Linear Regression."
msgstr ""

#: :7
msgid "**fit_intercept** : boolean, optional"
msgstr ""

#: :9
msgid ""
"whether to calculate the intercept for this model. If set to false, no "
"intercept will be used in calculations (e.g. data is expected to be "
"already centered)."
msgstr ""

#: :13
msgid "**normalize** : boolean, optional, default False"
msgstr ""

#: :15
msgid "If True, the regressors X will be normalized before regression."
msgstr ""

#: :17
msgid "**copy_X** : boolean, optional, default True"
msgstr ""

#: :19
msgid "If True, X will be copied; else, it may be overwritten."
msgstr ""

#: :21
msgid "**n_jobs** : int, optional, default 1"
msgstr ""

#: :23
msgid ""
"The number of jobs to use for the computation. If -1 all CPUs are used. "
"This will only provide speedup for n_targets > 1 and sufficient large "
"problems."
msgstr ""

#: :29
msgid "**coef_** : array, shape (n_features, ) or (n_targets, n_features)"
msgstr ""

#: :31
msgid ""
"Estimated coefficients for the linear regression problem. If multiple "
"targets are passed during the fit (y 2D), this is a 2D array of shape "
"(n_targets, n_features), while if only one target is passed, this is a 1D"
" array of length n_features."
msgstr ""

#: :36
msgid "**intercept_** : array"
msgstr ""

#: :38
msgid "Independent term in the linear model."
msgstr ""

#: :41
msgid "Notes"
msgstr ""

#: :42
msgid ""
"From the implementation point of view, this is just plain Ordinary Least "
"Squares (scipy.linalg.lstsq) wrapped as a predictor object."
msgstr ""

#: :46
msgid "Methods"
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`decision_function "
"<sklearn.linear_model.LinearRegression.decision_function>`\\ (\\*args, "
"\\*\\*kwargs)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "DEPRECATED:  and will be removed in 0.19."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`fit <sklearn.linear_model.LinearRegression.fit>`\\ (X, y[, "
"sample_weight])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Fit linear model."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`get_params <sklearn.linear_model.LinearRegression.get_params>`\\ "
"([deep])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Get parameters for this estimator."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`predict <sklearn.linear_model.LinearRegression.predict>`\\ (X)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Predict using the linear model"
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`score <sklearn.linear_model.LinearRegression.score>`\\ (X, y[, "
"sample_weight])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Returns the coefficient of determination R^2 of the prediction."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`set_params <sklearn.linear_model.LinearRegression.set_params>`\\ "
"(\\*\\*params)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Set the parameters of this estimator."
msgstr ""

#: :5
msgid "Decision function of the linear model."
msgstr ""

#: :9 :7
msgid "**X** : {array-like, sparse matrix}, shape = (n_samples, n_features)"
msgstr ""

#: :11 :9
msgid "Samples."
msgstr ""

#: :15 :13
msgid "**C** : array, shape = (n_samples,)"
msgstr ""

#: :17 :15
msgid "Returns predicted values."
msgstr ""

#: :7
msgid "**X** : numpy array or sparse matrix of shape [n_samples,n_features]"
msgstr ""

#: :9
msgid "Training data"
msgstr ""

#: :11
msgid "**y** : numpy array of shape [n_samples, n_targets]"
msgstr ""

#: :13
msgid "Target values"
msgstr ""

#: :15
msgid "**sample_weight** : numpy array of shape [n_samples]"
msgstr ""

#: :17
msgid "Individual weights for each sample"
msgstr ""

#: :19
msgid "parameter *sample_weight* support to LinearRegression."
msgstr ""

#: :24
msgid "**self** : returns an instance of self."
msgstr ""

#: :7
msgid "**deep: boolean, optional** :"
msgstr ""

#: :9
msgid ""
"If True, will return the parameters for this estimator and contained "
"subobjects that are estimators."
msgstr ""

#: :14
msgid "**params** : mapping of string to any"
msgstr ""

#: :16
msgid "Parameter names mapped to their values."
msgstr ""

#: :3
msgid "DEPRECATED: ``residues_`` is deprecated and will be removed in 0.19"
msgstr ""

#: :5
msgid "Get the residues of the fitted model."
msgstr ""

#: :5
msgid ""
"The coefficient R^2 is defined as (1 - u/v), where u is the regression "
"sum of squares ((y_true - y_pred) ** 2).sum() and v is the residual sum "
"of squares ((y_true - y_true.mean()) ** 2).sum(). Best possible score is "
"1.0 and it can be negative (because the model can be arbitrarily worse). "
"A constant model that always predicts the expected value of y, "
"disregarding the input features, would get a R^2 score of 0.0."
msgstr ""

#: :15
msgid "**X** : array-like, shape = (n_samples, n_features)"
msgstr ""

#: :17
msgid "Test samples."
msgstr ""

#: :19
msgid "**y** : array-like, shape = (n_samples) or (n_samples, n_outputs)"
msgstr ""

#: :21
msgid "True values for X."
msgstr ""

#: :23
msgid "**sample_weight** : array-like, shape = [n_samples], optional"
msgstr ""

#: :25
msgid "Sample weights."
msgstr ""

#: :29
msgid "**score** : float"
msgstr ""

#: :31
msgid "R^2 of self.predict(X) wrt. y."
msgstr ""

#: :5
msgid ""
"The method works on simple estimators as well as on nested objects (such "
"as pipelines). The former have parameters of the form "
"``<component>__<parameter>`` so that it's possible to update each "
"component of a nested object."
msgstr ""

#: :12
msgid "**self** :"
msgstr ""

#: ../../modules/generated/sklearn.linear_model.LinearRegression.examples:3
msgid "Examples using ``sklearn.linear_model.LinearRegression``"
msgstr ""

#: ../../modules/generated/sklearn.linear_model.LinearRegression.examples:25
msgid ":ref:`example_plot_cv_predict.py`"
msgstr ""

#: ../../modules/generated/sklearn.linear_model.LinearRegression.examples:45
msgid ":ref:`example_plot_isotonic_regression.py`"
msgstr ""

#: ../../modules/generated/sklearn.linear_model.LinearRegression.examples:65
msgid ":ref:`example_plot_multioutput_face_completion.py`"
msgstr ""

#: ../../modules/generated/sklearn.linear_model.LinearRegression.examples:85
msgid ":ref:`example_linear_model_plot_ransac.py`"
msgstr ""

#: ../../modules/generated/sklearn.linear_model.LinearRegression.examples:105
msgid ":ref:`example_linear_model_plot_ols.py`"
msgstr ""

#: ../../modules/generated/sklearn.linear_model.LinearRegression.examples:125
msgid ":ref:`example_linear_model_plot_ols_ridge_variance.py`"
msgstr ""

#: ../../modules/generated/sklearn.linear_model.LinearRegression.examples:145
msgid ":ref:`example_linear_model_plot_logistic.py`"
msgstr ""

#: ../../modules/generated/sklearn.linear_model.LinearRegression.examples:165
msgid ":ref:`example_linear_model_plot_bayesian_ridge.py`"
msgstr ""

#: ../../modules/generated/sklearn.linear_model.LinearRegression.examples:185
msgid ":ref:`example_linear_model_plot_ols_3d.py`"
msgstr ""

#: ../../modules/generated/sklearn.linear_model.LinearRegression.examples:205
msgid ":ref:`example_linear_model_plot_robust_fit.py`"
msgstr ""

#: ../../modules/generated/sklearn.linear_model.LinearRegression.examples:225
msgid ":ref:`example_linear_model_plot_ard.py`"
msgstr ""

#: ../../modules/generated/sklearn.linear_model.LinearRegression.examples:245
msgid ":ref:`example_linear_model_plot_theilsen.py`"
msgstr ""

#: ../../modules/generated/sklearn.linear_model.LinearRegression.examples:265
msgid ":ref:`example_model_selection_plot_underfitting_overfitting.py`"
msgstr ""

