# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 - 2014, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.17\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-02-16 21:59+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.2.0\n"

#: ../../modules/generated/sklearn.linear_model.PassiveAggressiveRegressor.rst:2
msgid ":mod:`sklearn.linear_model`.PassiveAggressiveRegressor"
msgstr ""

#: :3
msgid "Passive Aggressive Regressor"
msgstr ""

#: :5
msgid "Read more in the :ref:`User Guide <passive_aggressive>`."
msgstr ""

#: :9
msgid "**C** : float"
msgstr ""

#: :11
msgid "Maximum step size (regularization). Defaults to 1.0."
msgstr ""

#: :13
msgid "**epsilon** : float"
msgstr ""

#: :15
msgid ""
"If the difference between the current prediction and the correct label is"
" below this threshold, the model is not updated."
msgstr ""

#: :18
msgid "**fit_intercept** : bool"
msgstr ""

#: :20
msgid ""
"Whether the intercept should be estimated or not. If False, the data is "
"assumed to be already centered. Defaults to True."
msgstr ""

#: :23
msgid "**n_iter** : int, optional"
msgstr ""

#: :25
msgid "The number of passes over the training data (aka epochs). Defaults to 5."
msgstr ""

#: :28
msgid "**shuffle** : bool, default=True"
msgstr ""

#: :30
msgid "Whether or not the training data should be shuffled after each epoch."
msgstr ""

#: :32
msgid "**random_state** : int seed, RandomState instance, or None (default)"
msgstr ""

#: :34
msgid ""
"The seed of the pseudo random number generator to use when shuffling the "
"data."
msgstr ""

#: :37
msgid "**verbose** : integer, optional"
msgstr ""

#: :39
msgid "The verbosity level"
msgstr ""

#: :41
msgid "**loss** : string, optional"
msgstr ""

#: :43
msgid ""
"The loss function to be used: epsilon_insensitive: equivalent to PA-I in "
"the reference paper. squared_epsilon_insensitive: equivalent to PA-II in "
"the reference paper."
msgstr ""

#: :48
msgid "**warm_start** : bool, optional"
msgstr ""

#: :50
msgid ""
"When set to True, reuse the solution of the previous call to fit as "
"initialization, otherwise, just erase the previous solution."
msgstr ""

#: :55
msgid ""
"**coef_** : array, shape = [1, n_features] if n_classes == 2 else "
"[n_classes,            n_features]"
msgstr ""

#: :57
msgid "Weights assigned to the features."
msgstr ""

#: :59
msgid "**intercept_** : array, shape = [1] if n_classes == 2 else [n_classes]"
msgstr ""

#: :61
msgid "Constants in decision function."
msgstr ""

#: :65
msgid ":obj:`SGDRegressor`"
msgstr ""

#: :68
msgid "References"
msgstr ""

#: :69
msgid ""
"Online Passive-Aggressive Algorithms "
"<http://jmlr.csail.mit.edu/papers/volume7/crammer06a/crammer06a.pdf> K. "
"Crammer, O. Dekel, J. Keshat, S. Shalev-Shwartz, Y. Singer - JMLR (2006)"
msgstr ""

#: :76
msgid "Methods"
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`decision_function "
"<sklearn.linear_model.PassiveAggressiveRegressor.decision_function>`\\ "
"(\\*args, \\*\\*kwargs)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "DEPRECATED:  and will be removed in 0.19."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`densify "
"<sklearn.linear_model.PassiveAggressiveRegressor.densify>`\\ ()"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Convert coefficient matrix to dense array format."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`fit <sklearn.linear_model.PassiveAggressiveRegressor.fit>`\\ (X, "
"y[, coef_init, intercept_init])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Fit linear model with Passive Aggressive algorithm."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`get_params "
"<sklearn.linear_model.PassiveAggressiveRegressor.get_params>`\\ ([deep])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Get parameters for this estimator."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`partial_fit "
"<sklearn.linear_model.PassiveAggressiveRegressor.partial_fit>`\\ (X, y)"
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`predict "
"<sklearn.linear_model.PassiveAggressiveRegressor.predict>`\\ (X)"
msgstr ""

#: ../../<autosummary>:1 :5 :3
msgid "Predict using the linear model"
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`score <sklearn.linear_model.PassiveAggressiveRegressor.score>`\\ "
"(X, y[, sample_weight])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Returns the coefficient of determination R^2 of the prediction."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`set_params "
"<sklearn.linear_model.PassiveAggressiveRegressor.set_params>`\\ (\\*args,"
" \\*\\*kwargs)"
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`sparsify "
"<sklearn.linear_model.PassiveAggressiveRegressor.sparsify>`\\ ()"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Convert coefficient matrix to sparse format."
msgstr ""

#: :9 :7
msgid "**X** : {array-like, sparse matrix}, shape (n_samples, n_features)"
msgstr ""

#: :13 :11
msgid "**array, shape (n_samples,)** :"
msgstr ""

#: :15 :13
msgid "Predicted target values per element in X."
msgstr ""

#: :5
msgid ""
"Converts the ``coef_`` member (back) to a numpy.ndarray. This is the "
"default format of ``coef_`` and is required for fitting, so calling this "
"method is only required on models that have previously been sparsified; "
"otherwise, it is a no-op."
msgstr ""

#: :12 :13
msgid "**self: estimator** :"
msgstr ""

#: :7
msgid "**X** : {array-like, sparse matrix}, shape = [n_samples, n_features]"
msgstr ""

#: :9
msgid "Training data"
msgstr ""

#: :11
msgid "**y** : numpy array of shape [n_samples]"
msgstr ""

#: :13
msgid "Target values"
msgstr ""

#: :15
msgid "**coef_init** : array, shape = [n_features]"
msgstr ""

#: :17
msgid "The initial coefficients to warm-start the optimization."
msgstr ""

#: :19
msgid "**intercept_init** : array, shape = [1]"
msgstr ""

#: :21
msgid "The initial intercept to warm-start the optimization."
msgstr ""

#: :25 :17
msgid "**self** : returns an instance of self."
msgstr ""

#: :7
msgid "**deep: boolean, optional** :"
msgstr ""

#: :9
msgid ""
"If True, will return the parameters for this estimator and contained "
"subobjects that are estimators."
msgstr ""

#: :14
msgid "**params** : mapping of string to any"
msgstr ""

#: :16
msgid "Parameter names mapped to their values."
msgstr ""

#: :9
msgid "Subset of training data"
msgstr ""

#: :13
msgid "Subset of target values"
msgstr ""

#: :5
msgid ""
"The coefficient R^2 is defined as (1 - u/v), where u is the regression "
"sum of squares ((y_true - y_pred) ** 2).sum() and v is the residual sum "
"of squares ((y_true - y_true.mean()) ** 2).sum(). Best possible score is "
"1.0 and it can be negative (because the model can be arbitrarily worse). "
"A constant model that always predicts the expected value of y, "
"disregarding the input features, would get a R^2 score of 0.0."
msgstr ""

#: :15
msgid "**X** : array-like, shape = (n_samples, n_features)"
msgstr ""

#: :17
msgid "Test samples."
msgstr ""

#: :19
msgid "**y** : array-like, shape = (n_samples) or (n_samples, n_outputs)"
msgstr ""

#: :21
msgid "True values for X."
msgstr ""

#: :23
msgid "**sample_weight** : array-like, shape = [n_samples], optional"
msgstr ""

#: :25
msgid "Sample weights."
msgstr ""

#: :29
msgid "**score** : float"
msgstr ""

#: :31
msgid "R^2 of self.predict(X) wrt. y."
msgstr ""

#: :5
msgid ""
"Converts the ``coef_`` member to a scipy.sparse matrix, which for "
"L1-regularized models can be much more memory- and storage-efficient than"
" the usual numpy.ndarray representation."
msgstr ""

#: :9
msgid "The ``intercept_`` member is not converted."
msgstr ""

#: :16
msgid "Notes"
msgstr ""

#: :17
#, python-format
msgid ""
"For non-sparse models, i.e. when there are not many zeros in ``coef_``, "
"this may actually *increase* memory usage, so use this method with care. "
"A rule of thumb is that the number of zero elements, which can be "
"computed with ``(coef_ == 0).sum()``, must be more than 50% for this to "
"provide significant benefits."
msgstr ""

#: :23
msgid ""
"After calling this method, further fitting with the partial_fit method "
"(if any) will not work until you call densify."
msgstr ""

