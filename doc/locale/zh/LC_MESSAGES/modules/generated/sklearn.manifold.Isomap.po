# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 - 2014, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.17\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-02-16 21:59+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.2.0\n"

#: ../../modules/generated/sklearn.manifold.Isomap.rst:2
msgid ":mod:`sklearn.manifold`.Isomap"
msgstr ""

#: :3
msgid "Isomap Embedding"
msgstr ""

#: :5
msgid "Non-linear dimensionality reduction through Isometric Mapping"
msgstr ""

#: :7
msgid "Read more in the :ref:`User Guide <isomap>`."
msgstr ""

#: :11
msgid "**n_neighbors** : integer"
msgstr ""

#: :13
msgid "number of neighbors to consider for each point."
msgstr ""

#: :15
msgid "**n_components** : integer"
msgstr ""

#: :17
msgid "number of coordinates for the manifold"
msgstr ""

#: :19
msgid "**eigen_solver** : ['auto'|'arpack'|'dense']"
msgstr ""

#: :21
msgid ""
"'auto' : Attempt to choose the most efficient solver for the given "
"problem."
msgstr ""

#: :24
msgid ""
"'arpack' : Use Arnoldi decomposition to find the eigenvalues and "
"eigenvectors."
msgstr ""

#: :27
msgid ""
"'dense' : Use a direct solver (i.e. LAPACK) for the eigenvalue "
"decomposition."
msgstr ""

#: :30
msgid "**tol** : float"
msgstr ""

#: :32
msgid ""
"Convergence tolerance passed to arpack or lobpcg. not used if "
"eigen_solver == 'dense'."
msgstr ""

#: :35
msgid "**max_iter** : integer"
msgstr ""

#: :37
msgid ""
"Maximum number of iterations for the arpack solver. not used if "
"eigen_solver == 'dense'."
msgstr ""

#: :40
msgid "**path_method** : string ['auto'|'FW'|'D']"
msgstr ""

#: :42
msgid "Method to use in finding shortest path."
msgstr ""

#: :44
msgid "'auto' : attempt to choose the best algorithm automatically."
msgstr ""

#: :46
msgid "'FW' : Floyd-Warshall algorithm."
msgstr ""

#: :48
msgid "'D' : Dijkstra's algorithm."
msgstr ""

#: :50
msgid "**neighbors_algorithm** : string ['auto'|'brute'|'kd_tree'|'ball_tree']"
msgstr ""

#: :52
msgid ""
"Algorithm to use for nearest neighbors search, passed to "
"neighbors.NearestNeighbors instance."
msgstr ""

#: :57
msgid "**embedding_** : array-like, shape (n_samples, n_components)"
msgstr ""

#: :59
msgid "Stores the embedding vectors."
msgstr ""

#: :61
msgid "**kernel_pca_** : object"
msgstr ""

#: :63
msgid "`KernelPCA` object used to implement the embedding."
msgstr ""

#: :65
msgid "**training_data_** : array-like, shape (n_samples, n_features)"
msgstr ""

#: :67
msgid "Stores the training data."
msgstr ""

#: :69
msgid "**nbrs_** : sklearn.neighbors.NearestNeighbors instance"
msgstr ""

#: :71
msgid ""
"Stores nearest neighbors instance, including BallTree or KDtree if "
"applicable."
msgstr ""

#: :74
msgid "**dist_matrix_** : array-like, shape (n_samples, n_samples)"
msgstr ""

#: :76
msgid "Stores the geodesic distance matrix of training data."
msgstr ""

#: :79
msgid "References"
msgstr ""

#: :80
msgid ""
"Tenenbaum, J.B.; De Silva, V.; & Langford, J.C. A global geometric "
"framework for nonlinear dimensionality reduction. Science 290 (5500)"
msgstr ""

#: :88
msgid "Methods"
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`fit <sklearn.manifold.Isomap.fit>`\\ (X[, y])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Compute the embedding vectors for data X"
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`fit_transform <sklearn.manifold.Isomap.fit_transform>`\\ (X[, y])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Fit the model from data in X and transform X."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`get_params <sklearn.manifold.Isomap.get_params>`\\ ([deep])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Get parameters for this estimator."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`reconstruction_error "
"<sklearn.manifold.Isomap.reconstruction_error>`\\ ()"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Compute the reconstruction error for the embedding."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`set_params <sklearn.manifold.Isomap.set_params>`\\ (\\*\\*params)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Set the parameters of this estimator."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`transform <sklearn.manifold.Isomap.transform>`\\ (X)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Transform X."
msgstr ""

#: :7
msgid "**X** : {array-like, sparse matrix, BallTree, KDTree, NearestNeighbors}"
msgstr ""

#: :9
msgid ""
"Sample data, shape = (n_samples, n_features), in the form of a numpy "
"array, precomputed tree, or NearestNeighbors object."
msgstr ""

#: :15
msgid "**self** : returns an instance of self."
msgstr ""

#: :7
msgid "**X: {array-like, sparse matrix, BallTree, KDTree}** :"
msgstr ""

#: :9
msgid ""
"Training vector, where n_samples in the number of samples and n_features "
"is the number of features."
msgstr ""

#: :14 :19
msgid "**X_new: array-like, shape (n_samples, n_components)** :"
msgstr ""

#: :7
msgid "**deep: boolean, optional** :"
msgstr ""

#: :9
msgid ""
"If True, will return the parameters for this estimator and contained "
"subobjects that are estimators."
msgstr ""

#: :14
msgid "**params** : mapping of string to any"
msgstr ""

#: :16
msgid "Parameter names mapped to their values."
msgstr ""

#: :7
msgid "**reconstruction_error** : float"
msgstr ""

#: :10
msgid "Notes"
msgstr ""

#: :11
msgid "The cost function of an isomap embedding is"
msgstr ""

#: :13
msgid "``E = frobenius_norm[K(D) - K(D_fit)] / n_samples``"
msgstr ""

#: :15
msgid ""
"Where D is the matrix of distances for the input data X, D_fit is the "
"matrix of distances for the output embedding X_fit, and K is the isomap "
"kernel:"
msgstr ""

#: :19
msgid "``K(D) = -0.5 * (I - 1/n_samples) * D^2 * (I - 1/n_samples)``"
msgstr ""

#: :5
msgid ""
"The method works on simple estimators as well as on nested objects (such "
"as pipelines). The former have parameters of the form "
"``<component>__<parameter>`` so that it's possible to update each "
"component of a nested object."
msgstr ""

#: :12
msgid "**self** :"
msgstr ""

#: :5
msgid ""
"This is implemented by linking the points X into the graph of geodesic "
"distances of the training data. First the `n_neighbors` nearest neighbors"
" of X are found in the training data, and from these the shortest "
"geodesic distances from each point in X to each point in the training "
"data are computed in order to construct the kernel. The embedding of X is"
" the projection of this kernel onto the embedding vectors of the training"
" set."
msgstr ""

#: :15
msgid "**X: array-like, shape (n_samples, n_features)** :"
msgstr ""

#: ../../modules/generated/sklearn.manifold.Isomap.examples:3
msgid "Examples using ``sklearn.manifold.Isomap``"
msgstr ""

#: ../../modules/generated/sklearn.manifold.Isomap.examples:25
msgid ":ref:`example_manifold_plot_compare_methods.py`"
msgstr ""

#: ../../modules/generated/sklearn.manifold.Isomap.examples:45
msgid ":ref:`example_manifold_plot_manifold_sphere.py`"
msgstr ""

#: ../../modules/generated/sklearn.manifold.Isomap.examples:65
msgid ":ref:`example_manifold_plot_lle_digits.py`"
msgstr ""

