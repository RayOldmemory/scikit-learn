# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 - 2014, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.17\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-02-16 21:59+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.2.0\n"

#: ../../modules/generated/sklearn.naive_bayes.GaussianNB.rst:2
msgid ":mod:`sklearn.naive_bayes`.GaussianNB"
msgstr ""

#: :3
msgid "Gaussian Naive Bayes (GaussianNB)"
msgstr ""

#: :5
msgid ""
"Can perform online updates to model parameters via `partial_fit` method. "
"For details on algorithm used to update feature means and variance "
"online, see Stanford CS tech report STAN-CS-79-773 by Chan, Golub, and "
"LeVeque:"
msgstr ""

#: :9
msgid "http://i.stanford.edu/pub/cstr/reports/cs/tr/79/773/CS-TR-79-773.pdf"
msgstr ""

#: :11
msgid "Read more in the :ref:`User Guide <gaussian_naive_bayes>`."
msgstr ""

#: :15
msgid "**class_prior_** : array, shape (n_classes,)"
msgstr ""

#: :17
msgid "probability of each class."
msgstr ""

#: :19
msgid "**class_count_** : array, shape (n_classes,)"
msgstr ""

#: :21
msgid "number of training samples observed in each class."
msgstr ""

#: :23
msgid "**theta_** : array, shape (n_classes, n_features)"
msgstr ""

#: :25
msgid "mean of each feature per class"
msgstr ""

#: :27
msgid "**sigma_** : array, shape (n_classes, n_features)"
msgstr ""

#: :29
msgid "variance of each feature per class"
msgstr ""

#: :32
msgid "Examples"
msgstr ""

#: :49
msgid "Methods"
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`fit <sklearn.naive_bayes.GaussianNB.fit>`\\ (X, y[, sample_weight])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Fit Gaussian Naive Bayes according to X, y"
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`get_params <sklearn.naive_bayes.GaussianNB.get_params>`\\ ([deep])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Get parameters for this estimator."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`partial_fit <sklearn.naive_bayes.GaussianNB.partial_fit>`\\ (X, y[,"
" classes, sample_weight])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Incremental fit on a batch of samples."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`predict <sklearn.naive_bayes.GaussianNB.predict>`\\ (X)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Perform classification on an array of test vectors X."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`predict_log_proba "
"<sklearn.naive_bayes.GaussianNB.predict_log_proba>`\\ (X)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Return log-probability estimates for the test vector X."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`predict_proba <sklearn.naive_bayes.GaussianNB.predict_proba>`\\ (X)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Return probability estimates for the test vector X."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`score <sklearn.naive_bayes.GaussianNB.score>`\\ (X, y[, "
"sample_weight])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Returns the mean accuracy on the given test data and labels."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`set_params <sklearn.naive_bayes.GaussianNB.set_params>`\\ "
"(\\*\\*params)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Set the parameters of this estimator."
msgstr ""

#: :3
msgid "Initialize self.  See help(type(self)) for accurate signature."
msgstr ""

#: :7 :19
msgid "**X** : array-like, shape (n_samples, n_features)"
msgstr ""

#: :9 :21
msgid ""
"Training vectors, where n_samples is the number of samples and n_features"
" is the number of features."
msgstr ""

#: :12 :24
msgid "**y** : array-like, shape (n_samples,)"
msgstr ""

#: :14 :26
msgid "Target values."
msgstr ""

#: :16 :35
msgid "**sample_weight** : array-like, shape (n_samples,), optional"
msgstr ""

#: :18 :37
msgid "Weights applied to individual samples (1. for unweighted)."
msgstr ""

#: :20
msgid "Gaussian Naive Bayes supports fitting with *sample_weight*."
msgstr ""

#: :25 :43
msgid "**self** : object"
msgstr ""

#: :27 :45
msgid "Returns self."
msgstr ""

#: :7
msgid "**deep: boolean, optional** :"
msgstr ""

#: :9
msgid ""
"If True, will return the parameters for this estimator and contained "
"subobjects that are estimators."
msgstr ""

#: :14
msgid "**params** : mapping of string to any"
msgstr ""

#: :16
msgid "Parameter names mapped to their values."
msgstr ""

#: :5
msgid ""
"This method is expected to be called several times consecutively on "
"different chunks of a dataset so as to implement out-of-core or online "
"learning."
msgstr ""

#: :9
msgid ""
"This is especially useful when the whole dataset is too big to fit in "
"memory at once."
msgstr ""

#: :12
msgid ""
"This method has some performance and numerical stability overhead, hence "
"it is better to call partial_fit on chunks of data that are as large as "
"possible (as long as fitting in the memory budget) to hide the overhead."
msgstr ""

#: :28
msgid "**classes** : array-like, shape (n_classes,)"
msgstr ""

#: :30
msgid "List of all the classes that can possibly appear in the y vector."
msgstr ""

#: :32
msgid ""
"Must be provided at the first call to partial_fit, can be omitted in "
"subsequent calls."
msgstr ""

#: :7
msgid "**X** : array-like, shape = [n_samples, n_features]"
msgstr ""

#: :11
msgid "**C** : array, shape = [n_samples]"
msgstr ""

#: :13
msgid "Predicted target values for X"
msgstr ""

#: :11
msgid "**C** : array-like, shape = [n_samples, n_classes]"
msgstr ""

#: :13
msgid ""
"Returns the log-probability of the samples for each class in the model. "
"The columns correspond to the classes in sorted order, as they appear in "
"the attribute `classes_`."
msgstr ""

#: :13
msgid ""
"Returns the probability of the samples for each class in the model. The "
"columns correspond to the classes in sorted order, as they appear in the "
"attribute `classes_`."
msgstr ""

#: :5
msgid ""
"In multi-label classification, this is the subset accuracy which is a "
"harsh metric since you require for each sample that each label set be "
"correctly predicted."
msgstr ""

#: :11
msgid "**X** : array-like, shape = (n_samples, n_features)"
msgstr ""

#: :13
msgid "Test samples."
msgstr ""

#: :15
msgid "**y** : array-like, shape = (n_samples) or (n_samples, n_outputs)"
msgstr ""

#: :17
msgid "True labels for X."
msgstr ""

#: :19
msgid "**sample_weight** : array-like, shape = [n_samples], optional"
msgstr ""

#: :21
msgid "Sample weights."
msgstr ""

#: :25
msgid "**score** : float"
msgstr ""

#: :27
msgid "Mean accuracy of self.predict(X) wrt. y."
msgstr ""

#: :5
msgid ""
"The method works on simple estimators as well as on nested objects (such "
"as pipelines). The former have parameters of the form "
"``<component>__<parameter>`` so that it's possible to update each "
"component of a nested object."
msgstr ""

#: :12
msgid "**self** :"
msgstr ""

#: ../../modules/generated/sklearn.naive_bayes.GaussianNB.examples:3
msgid "Examples using ``sklearn.naive_bayes.GaussianNB``"
msgstr ""

#: ../../modules/generated/sklearn.naive_bayes.GaussianNB.examples:25
msgid ":ref:`example_calibration_plot_compare_calibration.py`"
msgstr ""

#: ../../modules/generated/sklearn.naive_bayes.GaussianNB.examples:45
msgid ":ref:`example_calibration_plot_calibration_curve.py`"
msgstr ""

#: ../../modules/generated/sklearn.naive_bayes.GaussianNB.examples:65
msgid ":ref:`example_calibration_plot_calibration.py`"
msgstr ""

#: ../../modules/generated/sklearn.naive_bayes.GaussianNB.examples:85
msgid ":ref:`example_classification_plot_classifier_comparison.py`"
msgstr ""

#: ../../modules/generated/sklearn.naive_bayes.GaussianNB.examples:105
msgid ":ref:`example_ensemble_plot_voting_probas.py`"
msgstr ""

#: ../../modules/generated/sklearn.naive_bayes.GaussianNB.examples:125
msgid ":ref:`example_model_selection_plot_learning_curve.py`"
msgstr ""

