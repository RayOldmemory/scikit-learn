# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 - 2014, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.17\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-02-16 21:59+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.2.0\n"

#: ../../modules/generated/sklearn.neighbors.NearestNeighbors.rst:2
msgid ":mod:`sklearn.neighbors`.NearestNeighbors"
msgstr ""

#: :3
msgid "Unsupervised learner for implementing neighbor searches."
msgstr ""

#: :5
msgid "Read more in the :ref:`User Guide <unsupervised_neighbors>`."
msgstr ""

#: :9
msgid "**n_neighbors** : int, optional (default = 5)"
msgstr ""

#: :11
msgid "Number of neighbors to use by default for :meth:`k_neighbors` queries."
msgstr ""

#: :13
msgid "**radius** : float, optional (default = 1.0)"
msgstr ""

#: :15
msgid ""
"Range of parameter space to use by default for :meth`radius_neighbors` "
"queries."
msgstr ""

#: :18
msgid "**algorithm** : {'auto', 'ball_tree', 'kd_tree', 'brute'}, optional"
msgstr ""

#: :20
msgid "Algorithm used to compute the nearest neighbors:"
msgstr ""

#: :22
msgid "'ball_tree' will use :class:`BallTree`"
msgstr ""

#: :23
msgid "'kd_tree' will use :class:`KDtree`"
msgstr ""

#: :24
msgid "'brute' will use a brute-force search."
msgstr ""

#: :25
msgid ""
"'auto' will attempt to decide the most appropriate algorithm based on the"
" values passed to :meth:`fit` method."
msgstr ""

#: :28
msgid ""
"Note: fitting on sparse input will override the setting of this "
"parameter, using brute force."
msgstr ""

#: :31
msgid "**leaf_size** : int, optional (default = 30)"
msgstr ""

#: :33
msgid ""
"Leaf size passed to BallTree or KDTree.  This can affect the speed of the"
" construction and query, as well as the memory required to store the "
"tree.  The optimal value depends on the nature of the problem."
msgstr ""

#: :38
msgid "**p: integer, optional (default = 2)** :"
msgstr ""

#: :40
msgid ""
"Parameter for the Minkowski metric from "
"sklearn.metrics.pairwise.pairwise_distances. When p = 1, this is "
"equivalent to using manhattan_distance (l1), and euclidean_distance (l2) "
"for p = 2. For arbitrary p, minkowski_distance (l_p) is used."
msgstr ""

#: :45
msgid "**metric** : string or callable, default 'minkowski'"
msgstr ""

#: :47
msgid ""
"metric to use for distance computation. Any metric from scikit-learn or "
"scipy.spatial.distance can be used."
msgstr ""

#: :50
msgid ""
"If metric is a callable function, it is called on each pair of instances "
"(rows) and the resulting value recorded. The callable should take two "
"arrays as input and return one value indicating the distance between "
"them. This works for Scipy's metrics, but is less efficient than passing "
"the metric name as a string."
msgstr ""

#: :56
msgid "Distance matrices are not supported."
msgstr ""

#: :58
msgid "Valid values for metric are:"
msgstr ""

#: :60
msgid ""
"from scikit-learn: ['cityblock', 'cosine', 'euclidean', 'l1', 'l2', "
"'manhattan']"
msgstr ""

#: :63
msgid ""
"from scipy.spatial.distance: ['braycurtis', 'canberra', 'chebyshev', "
"'correlation', 'dice', 'hamming', 'jaccard', 'kulsinski', 'mahalanobis', "
"'matching', 'minkowski', 'rogerstanimoto', 'russellrao', 'seuclidean', "
"'sokalmichener', 'sokalsneath', 'sqeuclidean', 'yule']"
msgstr ""

#: :69
msgid ""
"See the documentation for scipy.spatial.distance for details on these "
"metrics."
msgstr ""

#: :72
msgid "**metric_params** : dict, optional (default = None)"
msgstr ""

#: :74
msgid "Additional keyword arguments for the metric function."
msgstr ""

#: :76
msgid "**n_jobs** : int, optional (default = 1)"
msgstr ""

#: :78
msgid ""
"The number of parallel jobs to run for neighbors search. If ``-1``, then "
"the number of jobs is set to the number of CPU cores. Affects only "
":meth:`k_neighbors` and :meth:`kneighbors_graph` methods."
msgstr ""

#: :84
msgid ""
":obj:`KNeighborsClassifier`, :obj:`RadiusNeighborsClassifier`, "
":obj:`KNeighborsRegressor`, :obj:`RadiusNeighborsRegressor`, "
":obj:`BallTree`"
msgstr ""

#: :87 :44
msgid "Notes"
msgstr ""

#: :88
msgid ""
"See :ref:`Nearest Neighbors <neighbors>` in the online documentation for "
"a discussion of the choice of ``algorithm`` and ``leaf_size``."
msgstr ""

#: :91
msgid "http://en.wikipedia.org/wiki/K-nearest_neighbor_algorithm"
msgstr ""

#: :94 :36 :52 :38
msgid "Examples"
msgstr ""

#: :112
msgid "Methods"
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`fit <sklearn.neighbors.NearestNeighbors.fit>`\\ (X[, y])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Fit the model using X as training data"
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`get_params <sklearn.neighbors.NearestNeighbors.get_params>`\\ "
"([deep])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Get parameters for this estimator."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`kneighbors <sklearn.neighbors.NearestNeighbors.kneighbors>`\\ ([X, "
"n_neighbors, return_distance])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Finds the K-neighbors of a point."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`kneighbors_graph "
"<sklearn.neighbors.NearestNeighbors.kneighbors_graph>`\\ ([X, "
"n_neighbors, mode])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Computes the (weighted) graph of k-Neighbors for points in X"
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`radius_neighbors "
"<sklearn.neighbors.NearestNeighbors.radius_neighbors>`\\ ([X, radius, "
"return_distance])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Finds the neighbors within a given radius of a point or points."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`radius_neighbors_graph "
"<sklearn.neighbors.NearestNeighbors.radius_neighbors_graph>`\\ ([X, "
"radius, mode])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Computes the (weighted) graph of Neighbors for points in X"
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`set_params <sklearn.neighbors.NearestNeighbors.set_params>`\\ "
"(\\*\\*params)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Set the parameters of this estimator."
msgstr ""

#: :7
msgid "**X** : {array-like, sparse matrix, BallTree, KDTree}"
msgstr ""

#: :9
msgid ""
"Training data. If array or matrix, shape [n_samples, n_features], or "
"[n_samples, n_samples] if metric='precomputed'."
msgstr ""

#: :7
msgid "**deep: boolean, optional** :"
msgstr ""

#: :9
msgid ""
"If True, will return the parameters for this estimator and contained "
"subobjects that are estimators."
msgstr ""

#: :14
msgid "**params** : mapping of string to any"
msgstr ""

#: :16
msgid "Parameter names mapped to their values."
msgstr ""

#: :5
msgid "Returns indices of and distances to the neighbors of each point."
msgstr ""

#: :9 :7
msgid ""
"**X** : array-like, shape (n_query, n_features),                 or "
"(n_query, n_indexed) if metric == 'precomputed'"
msgstr ""

#: :11 :9 :16 :12
msgid ""
"The query point or points. If not provided, neighbors of each indexed "
"point are returned. In this case, the query point is not considered its "
"own neighbor."
msgstr ""

#: :15 :13
msgid "**n_neighbors** : int"
msgstr ""

#: :17
msgid ""
"Number of neighbors to get (default is the value passed to the "
"constructor)."
msgstr ""

#: :20 :25
msgid "**return_distance** : boolean, optional. Defaults to True."
msgstr ""

#: :22 :27
msgid "If False, distances will not be returned"
msgstr ""

#: :26
msgid "**dist** : array"
msgstr ""

#: :28
msgid ""
"Array representing the lengths to points, only present if "
"return_distance=True"
msgstr ""

#: :31
msgid "**ind** : array"
msgstr ""

#: :33
msgid "Indices of the nearest points in the population matrix."
msgstr ""

#: :37
msgid ""
"In the following example, we construct a NeighborsClassifier class from "
"an array representing our data set and ask who's the closest point to "
"[1,1,1]"
msgstr ""

#: :49
msgid ""
"As you can see, it returns [[0.5]], and [[2]], which means that the "
"element is at distance 0.5 and is the third element of samples (indexes "
"start at 0). You can also query for multiple points:"
msgstr ""

#: :15
msgid ""
"Number of neighbors for each sample. (default is value passed to the "
"constructor)."
msgstr ""

#: :18 :21
msgid "**mode** : {'connectivity', 'distance'}, optional"
msgstr ""

#: :20 :23
msgid ""
"Type of returned matrix: 'connectivity' will return the connectivity "
"matrix with ones and zeros, in 'distance' the edges are Euclidean "
"distance between points."
msgstr ""

#: :26
msgid "**A** : sparse matrix in CSR format, shape = [n_samples, n_samples_fit]"
msgstr ""

#: :28
msgid ""
"n_samples_fit is the number of samples in the fitted data A[i, j] is "
"assigned the weight of edge that connects i to j."
msgstr ""

#: :33
msgid ":obj:`NearestNeighbors.radius_neighbors_graph`"
msgstr ""

#: :5
msgid ""
"Return the indices and distances of each point from the dataset lying in "
"a ball with size ``radius`` around the points of the query array. Points "
"lying on the boundary are included in the results."
msgstr ""

#: :9
msgid ""
"The result points are *not* necessarily sorted by distance to their query"
" point."
msgstr ""

#: :14
msgid "**X** : array-like, (n_samples, n_features), optional"
msgstr ""

#: :20 :16
msgid "**radius** : float"
msgstr ""

#: :22
msgid ""
"Limiting distance of neighbors to return. (default is the value passed to"
" the constructor)."
msgstr ""

#: :31
msgid "**dist** : array, shape (n_samples,) of arrays"
msgstr ""

#: :33
msgid ""
"Array representing the distances to each point, only present if "
"return_distance=True. The distance values are computed according to the "
"``metric`` constructor parameter."
msgstr ""

#: :37
msgid "**ind** : array, shape (n_samples,) of arrays"
msgstr ""

#: :39
msgid ""
"An array of arrays of indices of the approximate nearest points from the "
"population matrix that lie within a ball of size ``radius`` around the "
"query points."
msgstr ""

#: :45
msgid ""
"Because the number of neighbors of each point is not necessarily equal, "
"the results for multiple query points cannot be fit in a standard data "
"array. For efficiency, `radius_neighbors` returns arrays of objects, "
"where each object is a 1D array of indices or distances."
msgstr ""

#: :53
msgid ""
"In the following example, we construct a NeighborsClassifier class from "
"an array representing our data set and ask who's the closest point to [1,"
" 1, 1]:"
msgstr ""

#: :69
msgid ""
"The first array returned contains the distances to all points which are "
"closer than 1.6, while the second array returned contains their indices."
"  In general, multiple points can be queried at the same time."
msgstr ""

#: :5
msgid "Neighborhoods are restricted the points at a distance lower than radius."
msgstr ""

#: :10
msgid "**X** : array-like, shape = [n_samples, n_features], optional"
msgstr ""

#: :18
msgid "Radius of neighborhoods. (default is the value passed to the constructor)."
msgstr ""

#: :29
msgid "**A** : sparse matrix in CSR format, shape = [n_samples, n_samples]"
msgstr ""

#: :31
msgid "A[i, j] is assigned the weight of edge that connects i to j."
msgstr ""

#: :35
msgid ":obj:`kneighbors_graph`"
msgstr ""

#: :5
msgid ""
"The method works on simple estimators as well as on nested objects (such "
"as pipelines). The former have parameters of the form "
"``<component>__<parameter>`` so that it's possible to update each "
"component of a nested object."
msgstr ""

#: :12
msgid "**self** :"
msgstr ""

#: ../../modules/generated/sklearn.neighbors.NearestNeighbors.examples:3
msgid "Examples using ``sklearn.neighbors.NearestNeighbors``"
msgstr ""

#: ../../modules/generated/sklearn.neighbors.NearestNeighbors.examples:25
msgid ":ref:`example_neighbors_plot_approximate_nearest_neighbors_hyperparameters.py`"
msgstr ""

#: ../../modules/generated/sklearn.neighbors.NearestNeighbors.examples:45
msgid ":ref:`example_neighbors_plot_approximate_nearest_neighbors_scalability.py`"
msgstr ""

