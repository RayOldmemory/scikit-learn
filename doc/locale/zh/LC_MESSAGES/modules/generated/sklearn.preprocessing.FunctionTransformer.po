# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 - 2014, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.17\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-02-16 21:59+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.2.0\n"

#: ../../modules/generated/sklearn.preprocessing.FunctionTransformer.rst:2
msgid ":mod:`sklearn.preprocessing`.FunctionTransformer"
msgstr ""

#: :3
msgid "Constructs a transformer from an arbitrary callable."
msgstr ""

#: :5
msgid ""
"A FunctionTransformer forwards its X (and optionally y) arguments to a "
"user-defined function or function object and returns the result of this "
"function. This is useful for stateless transformations such as taking the"
" log of frequencies, doing custom scaling, etc."
msgstr ""

#: :10
msgid "A FunctionTransformer will not do any checks on its function's output."
msgstr ""

#: :12
msgid ""
"Note: If a lambda is used as the function, then the resulting transformer"
" will not be pickleable."
msgstr ""

#: :19
msgid "**func** : callable, optional default=None"
msgstr ""

#: :21
msgid ""
"The callable to use for the transformation. This will be passed the same "
"arguments as transform, with args and kwargs forwarded. If func is None, "
"then func will be the identity function."
msgstr ""

#: :25
msgid "**validate** : bool, optional default=True"
msgstr ""

#: :27
msgid ""
"Indicate that the input X array should be checked before calling func. If"
" validate is false, there will be no input validation. If it is true, "
"then X will be converted to a 2-dimensional NumPy array or sparse matrix."
" If this conversion is not possible or X contains NaN or infinity, an "
"exception is raised."
msgstr ""

#: :33
msgid "**accept_sparse** : boolean, optional"
msgstr ""

#: :35
msgid ""
"Indicate that func accepts a sparse matrix as input. If validate is "
"False, this has no effect. Otherwise, if accept_sparse is false, sparse "
"matrix inputs will cause an exception to be raised."
msgstr ""

#: :39
msgid "**pass_y: bool, optional default=False** :"
msgstr ""

#: :41
msgid ""
"Indicate that transform should forward the y argument to the inner "
"callable."
msgstr ""

#: :45
msgid "Methods"
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`fit <sklearn.preprocessing.FunctionTransformer.fit>`\\ (X[, y])"
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`fit_transform "
"<sklearn.preprocessing.FunctionTransformer.fit_transform>`\\ (X[, y])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Fit to data, then transform it."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`get_params "
"<sklearn.preprocessing.FunctionTransformer.get_params>`\\ ([deep])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Get parameters for this estimator."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`set_params "
"<sklearn.preprocessing.FunctionTransformer.set_params>`\\ (\\*\\*params)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Set the parameters of this estimator."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`transform <sklearn.preprocessing.FunctionTransformer.transform>`\\ "
"(X[, y])"
msgstr ""

#: :5
msgid ""
"Fits transformer to X and y with optional parameters fit_params and "
"returns a transformed version of X."
msgstr ""

#: :10
msgid "**X** : numpy array of shape [n_samples, n_features]"
msgstr ""

#: :12
msgid "Training set."
msgstr ""

#: :14
msgid "**y** : numpy array of shape [n_samples]"
msgstr ""

#: :16
msgid "Target values."
msgstr ""

#: :20
msgid "**X_new** : numpy array of shape [n_samples, n_features_new]"
msgstr ""

#: :22
msgid "Transformed array."
msgstr ""

#: :7
msgid "**deep: boolean, optional** :"
msgstr ""

#: :9
msgid ""
"If True, will return the parameters for this estimator and contained "
"subobjects that are estimators."
msgstr ""

#: :14
msgid "**params** : mapping of string to any"
msgstr ""

#: :16
msgid "Parameter names mapped to their values."
msgstr ""

#: :5
msgid ""
"The method works on simple estimators as well as on nested objects (such "
"as pipelines). The former have parameters of the form "
"``<component>__<parameter>`` so that it's possible to update each "
"component of a nested object."
msgstr ""

#: :12
msgid "**self** :"
msgstr ""

#: ../../modules/generated/sklearn.preprocessing.FunctionTransformer.examples:3
msgid "Examples using ``sklearn.preprocessing.FunctionTransformer``"
msgstr ""

#: ../../modules/generated/sklearn.preprocessing.FunctionTransformer.examples:25
msgid ":ref:`example_preprocessing_plot_function_transformer.py`"
msgstr ""

