# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 - 2014, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.17\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-02-16 21:59+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.2.0\n"

#: ../../modules/generated/sklearn.preprocessing.KernelCenterer.rst:2
msgid ":mod:`sklearn.preprocessing`.KernelCenterer"
msgstr ""

#: :3
msgid "Center a kernel matrix"
msgstr ""

#: :5
msgid ""
"Let K(x, z) be a kernel defined by phi(x)^T phi(z), where phi is a "
"function mapping x to a Hilbert space. KernelCenterer centers (i.e., "
"normalize to have zero mean) the data without explicitly computing "
"phi(x). It is equivalent to centering phi(x) with "
"sklearn.preprocessing.StandardScaler(with_std=False)."
msgstr ""

#: :11
msgid "Read more in the :ref:`User Guide <kernel_centering>`."
msgstr ""

#: :14
msgid "Methods"
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`fit <sklearn.preprocessing.KernelCenterer.fit>`\\ (K[, y])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Fit KernelCenterer"
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`fit_transform "
"<sklearn.preprocessing.KernelCenterer.fit_transform>`\\ (X[, y])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Fit to data, then transform it."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`get_params <sklearn.preprocessing.KernelCenterer.get_params>`\\ "
"([deep])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Get parameters for this estimator."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`set_params <sklearn.preprocessing.KernelCenterer.set_params>`\\ "
"(\\*\\*params)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Set the parameters of this estimator."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`transform <sklearn.preprocessing.KernelCenterer.transform>`\\ (K[, "
"y, copy])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Center kernel matrix."
msgstr ""

#: :3
msgid "Initialize self.  See help(type(self)) for accurate signature."
msgstr ""

#: :7
msgid "**K** : numpy array of shape [n_samples, n_samples]"
msgstr ""

#: :9
msgid "Kernel matrix."
msgstr ""

#: :13
msgid "**self** : returns an instance of self."
msgstr ""

#: :5
msgid ""
"Fits transformer to X and y with optional parameters fit_params and "
"returns a transformed version of X."
msgstr ""

#: :10
msgid "**X** : numpy array of shape [n_samples, n_features]"
msgstr ""

#: :12
msgid "Training set."
msgstr ""

#: :14
msgid "**y** : numpy array of shape [n_samples]"
msgstr ""

#: :16
msgid "Target values."
msgstr ""

#: :20
msgid "**X_new** : numpy array of shape [n_samples, n_features_new]"
msgstr ""

#: :22
msgid "Transformed array."
msgstr ""

#: :7
msgid "**deep: boolean, optional** :"
msgstr ""

#: :9
msgid ""
"If True, will return the parameters for this estimator and contained "
"subobjects that are estimators."
msgstr ""

#: :14
msgid "**params** : mapping of string to any"
msgstr ""

#: :16
msgid "Parameter names mapped to their values."
msgstr ""

#: :5
msgid ""
"The method works on simple estimators as well as on nested objects (such "
"as pipelines). The former have parameters of the form "
"``<component>__<parameter>`` so that it's possible to update each "
"component of a nested object."
msgstr ""

#: :12
msgid "**self** :"
msgstr ""

#: :7
msgid "**K** : numpy array of shape [n_samples1, n_samples2]"
msgstr ""

#: :11
msgid "**copy** : boolean, optional, default True"
msgstr ""

#: :13
msgid "Set to False to perform inplace computation."
msgstr ""

#: :17
msgid "**K_new** : numpy array of shape [n_samples1, n_samples2]"
msgstr ""

