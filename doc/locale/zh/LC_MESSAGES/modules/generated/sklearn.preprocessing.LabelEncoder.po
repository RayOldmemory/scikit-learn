# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 - 2014, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.17\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-02-16 21:59+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.2.0\n"

#: ../../modules/generated/sklearn.preprocessing.LabelEncoder.rst:2
msgid ":mod:`sklearn.preprocessing`.LabelEncoder"
msgstr ""

#: :3
msgid "Encode labels with value between 0 and n_classes-1."
msgstr ""

#: :5
msgid "Read more in the :ref:`User Guide <preprocessing_targets>`."
msgstr ""

#: :9
msgid "**classes_** : array of shape (n_class,)"
msgstr ""

#: :11
msgid "Holds the label for each class."
msgstr ""

#: :14
msgid "Examples"
msgstr ""

#: :15
msgid "`LabelEncoder` can be used to normalize labels."
msgstr ""

#: :28
msgid ""
"It can also be used to transform non-numerical labels (as long as they "
"are hashable and comparable) to numerical labels."
msgstr ""

#: :42
msgid "Methods"
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`fit <sklearn.preprocessing.LabelEncoder.fit>`\\ (y)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Fit label encoder"
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`fit_transform <sklearn.preprocessing.LabelEncoder.fit_transform>`\\"
" (y)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Fit label encoder and return encoded labels"
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`get_params <sklearn.preprocessing.LabelEncoder.get_params>`\\ "
"([deep])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Get parameters for this estimator."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`inverse_transform "
"<sklearn.preprocessing.LabelEncoder.inverse_transform>`\\ (y)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Transform labels back to original encoding."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`set_params <sklearn.preprocessing.LabelEncoder.set_params>`\\ "
"(\\*\\*params)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Set the parameters of this estimator."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`transform <sklearn.preprocessing.LabelEncoder.transform>`\\ (y)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Transform labels to normalized encoding."
msgstr ""

#: :3
msgid "Initialize self.  See help(type(self)) for accurate signature."
msgstr ""

#: :7
msgid "**y** : array-like of shape (n_samples,)"
msgstr ""

#: :9
msgid "Target values."
msgstr ""

#: :13
msgid "**self** : returns an instance of self."
msgstr ""

#: :7 :13
msgid "**y** : array-like of shape [n_samples]"
msgstr ""

#: :7
msgid "**deep: boolean, optional** :"
msgstr ""

#: :9
msgid ""
"If True, will return the parameters for this estimator and contained "
"subobjects that are estimators."
msgstr ""

#: :14
msgid "**params** : mapping of string to any"
msgstr ""

#: :16
msgid "Parameter names mapped to their values."
msgstr ""

#: :7 :13
msgid "**y** : numpy array of shape [n_samples]"
msgstr ""

#: :5
msgid ""
"The method works on simple estimators as well as on nested objects (such "
"as pipelines). The former have parameters of the form "
"``<component>__<parameter>`` so that it's possible to update each "
"component of a nested object."
msgstr ""

#: :12
msgid "**self** :"
msgstr ""

