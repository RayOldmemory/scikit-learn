# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 - 2014, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.17\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-02-16 21:59+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.2.0\n"

#: ../../modules/generated/sklearn.preprocessing.MinMaxScaler.rst:2
msgid ":mod:`sklearn.preprocessing`.MinMaxScaler"
msgstr ""

#: :3
msgid "Transforms features by scaling each feature to a given range."
msgstr ""

#: :5
msgid ""
"This estimator scales and translates each feature individually such that "
"it is in the given range on the training set, i.e. between zero and one."
msgstr ""

#: :9
msgid "The transformation is given by::"
msgstr ""

#: :14
msgid "where min, max = feature_range."
msgstr ""

#: :16
msgid ""
"This transformation is often used as an alternative to zero mean, unit "
"variance scaling."
msgstr ""

#: :19
msgid "Read more in the :ref:`User Guide <preprocessing_scaler>`."
msgstr ""

#: :23
msgid "**feature_range: tuple (min, max), default=(0, 1)** :"
msgstr ""

#: :25
msgid "Desired range of transformed data."
msgstr ""

#: :27
msgid "**copy** : boolean, optional, default True"
msgstr ""

#: :29
msgid ""
"Set to False to perform inplace row normalization and avoid a copy (if "
"the input is already a numpy array)."
msgstr ""

#: :34
msgid "**min_** : ndarray, shape (n_features,)"
msgstr ""

#: :36
msgid "Per feature adjustment for minimum."
msgstr ""

#: :38
msgid "**scale_** : ndarray, shape (n_features,)"
msgstr ""

#: :40
msgid "Per feature relative scaling of the data."
msgstr ""

#: :42
msgid "*scale_* attribute."
msgstr ""

#: :45
msgid "**data_min_** : ndarray, shape (n_features,)"
msgstr ""

#: :47
msgid "Per feature minimum seen in the data"
msgstr ""

#: :49
msgid "*data_min_* instead of deprecated *data_min*."
msgstr ""

#: :52
msgid "**data_max_** : ndarray, shape (n_features,)"
msgstr ""

#: :54
msgid "Per feature maximum seen in the data"
msgstr ""

#: :56
msgid "*data_max_* instead of deprecated *data_max*."
msgstr ""

#: :59
msgid "**data_range_** : ndarray, shape (n_features,)"
msgstr ""

#: :61
msgid "Per feature range ``(data_max_ - data_min_)`` seen in the data"
msgstr ""

#: :63
msgid "*data_range_* instead of deprecated *data_range*."
msgstr ""

#: :67
msgid "Methods"
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`fit <sklearn.preprocessing.MinMaxScaler.fit>`\\ (X[, y])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Compute the minimum and maximum to be used for later scaling."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`fit_transform <sklearn.preprocessing.MinMaxScaler.fit_transform>`\\"
" (X[, y])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Fit to data, then transform it."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`get_params <sklearn.preprocessing.MinMaxScaler.get_params>`\\ "
"([deep])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Get parameters for this estimator."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`inverse_transform "
"<sklearn.preprocessing.MinMaxScaler.inverse_transform>`\\ (X)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Undo the scaling of X according to feature_range."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`partial_fit <sklearn.preprocessing.MinMaxScaler.partial_fit>`\\ "
"(X[, y])"
msgstr ""

#: ../../<autosummary>:1
msgid "Online computation of min and max on X for later scaling."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`set_params <sklearn.preprocessing.MinMaxScaler.set_params>`\\ "
"(\\*\\*params)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Set the parameters of this estimator."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`transform <sklearn.preprocessing.MinMaxScaler.transform>`\\ (X)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Scaling features of X according to feature_range."
msgstr ""

#: :3
msgid ""
"DEPRECATED: Attribute data_min will be removed in 0.19. Use ``data_min_``"
" instead"
msgstr ""

#: :3
msgid ""
"DEPRECATED: Attribute data_range will be removed in 0.19. Use "
"``data_range_`` instead"
msgstr ""

#: :7 :10
msgid "**X** : array-like, shape [n_samples, n_features]"
msgstr ""

#: :9
msgid ""
"The data used to compute the per-feature minimum and maximum used for "
"later scaling along the features axis."
msgstr ""

#: :5
msgid ""
"Fits transformer to X and y with optional parameters fit_params and "
"returns a transformed version of X."
msgstr ""

#: :10
msgid "**X** : numpy array of shape [n_samples, n_features]"
msgstr ""

#: :12
msgid "Training set."
msgstr ""

#: :14
msgid "**y** : numpy array of shape [n_samples]"
msgstr ""

#: :16
msgid "Target values."
msgstr ""

#: :20
msgid "**X_new** : numpy array of shape [n_samples, n_features_new]"
msgstr ""

#: :22
msgid "Transformed array."
msgstr ""

#: :7
msgid "**deep: boolean, optional** :"
msgstr ""

#: :9
msgid ""
"If True, will return the parameters for this estimator and contained "
"subobjects that are estimators."
msgstr ""

#: :14
msgid "**params** : mapping of string to any"
msgstr ""

#: :16
msgid "Parameter names mapped to their values."
msgstr ""

#: :9
msgid "Input data that will be transformed. It cannot be sparse."
msgstr ""

#: :3
msgid ""
"Online computation of min and max on X for later scaling. All of X is "
"processed as a single batch. This is intended for cases when `fit` is not"
" feasible due to very large number of `n_samples` or because X is read "
"from a continuous stream."
msgstr ""

#: :12
msgid ""
"The data used to compute the mean and standard deviation used for later "
"scaling along the features axis."
msgstr ""

#: :15
msgid "**y** : Passthrough for ``Pipeline`` compatibility."
msgstr ""

#: :5
msgid ""
"The method works on simple estimators as well as on nested objects (such "
"as pipelines). The former have parameters of the form "
"``<component>__<parameter>`` so that it's possible to update each "
"component of a nested object."
msgstr ""

#: :12
msgid "**self** :"
msgstr ""

#: :9
msgid "Input data that will be transformed."
msgstr ""

