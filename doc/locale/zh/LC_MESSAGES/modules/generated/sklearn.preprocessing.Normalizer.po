# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 - 2014, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.17\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-02-16 21:59+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.2.0\n"

#: ../../modules/generated/sklearn.preprocessing.Normalizer.rst:2
msgid ":mod:`sklearn.preprocessing`.Normalizer"
msgstr ""

#: :3
msgid "Normalize samples individually to unit norm."
msgstr ""

#: :5
msgid ""
"Each sample (i.e. each row of the data matrix) with at least one non zero"
" component is rescaled independently of other samples so that its norm "
"(l1 or l2) equals one."
msgstr ""

#: :9
msgid ""
"This transformer is able to work both with dense numpy arrays and "
"scipy.sparse matrix (use CSR format if you want to avoid the burden of a "
"copy / conversion)."
msgstr ""

#: :13
msgid ""
"Scaling inputs to unit norms is a common operation for text "
"classification or clustering for instance. For instance the dot product "
"of two l2-normalized TF-IDF vectors is the cosine similarity of the "
"vectors and is the base similarity metric for the Vector Space Model "
"commonly used by the Information Retrieval community."
msgstr ""

#: :19
msgid "Read more in the :ref:`User Guide <preprocessing_normalization>`."
msgstr ""

#: :23
msgid "**norm** : 'l1', 'l2', or 'max', optional ('l2' by default)"
msgstr ""

#: :25
msgid "The norm to use to normalize each non zero sample."
msgstr ""

#: :27
msgid "**copy** : boolean, optional, default True"
msgstr ""

#: :29
msgid ""
"set to False to perform inplace row normalization and avoid a copy (if "
"the input is already a numpy array or a scipy.sparse CSR matrix)."
msgstr ""

#: :35
msgid ":func:`sklearn.preprocessing.normalize`, :obj:`without`"
msgstr ""

#: :38
msgid "Notes"
msgstr ""

#: :39
msgid ""
"This estimator is stateless (besides constructor parameters), the fit "
"method does nothing but is useful when used in a pipeline."
msgstr ""

#: :43
msgid "Methods"
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`fit <sklearn.preprocessing.Normalizer.fit>`\\ (X[, y])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Do nothing and return the estimator unchanged"
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`fit_transform <sklearn.preprocessing.Normalizer.fit_transform>`\\ "
"(X[, y])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Fit to data, then transform it."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`get_params <sklearn.preprocessing.Normalizer.get_params>`\\ ([deep])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Get parameters for this estimator."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`set_params <sklearn.preprocessing.Normalizer.set_params>`\\ "
"(\\*\\*params)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Set the parameters of this estimator."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`transform <sklearn.preprocessing.Normalizer.transform>`\\ (X[, y, "
"copy])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Scale each non zero row of X to unit norm"
msgstr ""

#: :5
msgid ""
"This method is just there to implement the usual API and hence work in "
"pipelines."
msgstr ""

#: :5
msgid ""
"Fits transformer to X and y with optional parameters fit_params and "
"returns a transformed version of X."
msgstr ""

#: :10
msgid "**X** : numpy array of shape [n_samples, n_features]"
msgstr ""

#: :12
msgid "Training set."
msgstr ""

#: :14
msgid "**y** : numpy array of shape [n_samples]"
msgstr ""

#: :16
msgid "Target values."
msgstr ""

#: :20
msgid "**X_new** : numpy array of shape [n_samples, n_features_new]"
msgstr ""

#: :22
msgid "Transformed array."
msgstr ""

#: :7
msgid "**deep: boolean, optional** :"
msgstr ""

#: :9
msgid ""
"If True, will return the parameters for this estimator and contained "
"subobjects that are estimators."
msgstr ""

#: :14
msgid "**params** : mapping of string to any"
msgstr ""

#: :16
msgid "Parameter names mapped to their values."
msgstr ""

#: :5
msgid ""
"The method works on simple estimators as well as on nested objects (such "
"as pipelines). The former have parameters of the form "
"``<component>__<parameter>`` so that it's possible to update each "
"component of a nested object."
msgstr ""

#: :12
msgid "**self** :"
msgstr ""

#: :7
msgid "**X** : {array-like, sparse matrix}, shape [n_samples, n_features]"
msgstr ""

#: :9
msgid ""
"The data to normalize, row by row. scipy.sparse matrices should be in CSR"
" format to avoid an un-necessary copy."
msgstr ""

#: ../../modules/generated/sklearn.preprocessing.Normalizer.examples:3
msgid "Examples using ``sklearn.preprocessing.Normalizer``"
msgstr ""

#: ../../modules/generated/sklearn.preprocessing.Normalizer.examples:25
msgid ":ref:`example_text_document_clustering.py`"
msgstr ""

