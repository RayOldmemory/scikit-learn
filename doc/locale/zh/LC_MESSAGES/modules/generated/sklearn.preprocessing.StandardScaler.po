# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 - 2014, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.17\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-02-16 21:59+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.2.0\n"

#: ../../modules/generated/sklearn.preprocessing.StandardScaler.rst:2
msgid ":mod:`sklearn.preprocessing`.StandardScaler"
msgstr ""

#: :3
msgid "Standardize features by removing the mean and scaling to unit variance"
msgstr ""

#: :5
msgid ""
"Centering and scaling happen independently on each feature by computing "
"the relevant statistics on the samples in the training set. Mean and "
"standard deviation are then stored to be used on later data using the "
"`transform` method."
msgstr ""

#: :10
msgid ""
"Standardization of a dataset is a common requirement for many machine "
"learning estimators: they might behave badly if the individual feature do"
" not more or less look like standard normally distributed data (e.g. "
"Gaussian with 0 mean and unit variance)."
msgstr ""

#: :15
msgid ""
"For instance many elements used in the objective function of a learning "
"algorithm (such as the RBF kernel of Support Vector Machines or the L1 "
"and L2 regularizers of linear models) assume that all features are "
"centered around 0 and have variance in the same order. If a feature has a"
" variance that is orders of magnitude larger that others, it might "
"dominate the objective function and make the estimator unable to learn "
"from other features correctly as expected."
msgstr ""

#: :23
msgid ""
"This scaler can also be applied to sparse CSR or CSC matrices by passing "
"`with_mean=False` to avoid breaking the sparsity structure of the data."
msgstr ""

#: :26
msgid "Read more in the :ref:`User Guide <preprocessing_scaler>`."
msgstr ""

#: :30
msgid "**with_mean** : boolean, True by default"
msgstr ""

#: :32
msgid ""
"If True, center the data before scaling. This does not work (and will "
"raise an exception) when attempted on sparse matrices, because centering "
"them entails building a dense matrix which in common use cases is likely "
"to be too large to fit in memory."
msgstr ""

#: :38
msgid "**with_std** : boolean, True by default"
msgstr ""

#: :40
msgid ""
"If True, scale the data to unit variance (or equivalently, unit standard "
"deviation)."
msgstr ""

#: :43
msgid "**copy** : boolean, optional, default True"
msgstr ""

#: :45
msgid ""
"If False, try to avoid a copy and do inplace scaling instead. This is not"
" guaranteed to always work inplace; e.g. if the data is not a NumPy array"
" or scipy.sparse CSR matrix, a copy may still be returned."
msgstr ""

#: :52
msgid "**scale_** : ndarray, shape (n_features,)"
msgstr ""

#: :54
msgid "Per feature relative scaling of the data."
msgstr ""

#: :56
msgid "*scale_* is recommended instead of deprecated *std_*."
msgstr ""

#: :59
msgid "**mean_** : array of floats with shape [n_features]"
msgstr ""

#: :61
msgid "The mean value for each feature in the training set."
msgstr ""

#: :63
msgid "**var_** : array of floats with shape [n_features]"
msgstr ""

#: :65
msgid ""
"The variance for each feature in the training set. Used to compute "
"`scale_`"
msgstr ""

#: :68
msgid "**n_samples_seen_** : int"
msgstr ""

#: :70
msgid ""
"The number of samples processed by the estimator. Will be reset on new "
"calls to fit, but increments across ``partial_fit`` calls."
msgstr ""

#: :75
msgid ""
":func:`sklearn.preprocessing.scale`, :obj:`scaling`, "
":class:`sklearn.decomposition.RandomizedPCA`, :obj:`to`"
msgstr ""

#: :78
msgid "Methods"
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`fit <sklearn.preprocessing.StandardScaler.fit>`\\ (X[, y])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Compute the mean and std to be used for later scaling."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`fit_transform "
"<sklearn.preprocessing.StandardScaler.fit_transform>`\\ (X[, y])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Fit to data, then transform it."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`get_params <sklearn.preprocessing.StandardScaler.get_params>`\\ "
"([deep])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Get parameters for this estimator."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`inverse_transform "
"<sklearn.preprocessing.StandardScaler.inverse_transform>`\\ (X[, copy])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Scale back the data to the original representation"
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`partial_fit <sklearn.preprocessing.StandardScaler.partial_fit>`\\ "
"(X[, y])"
msgstr ""

#: ../../<autosummary>:1
msgid "Online computation of mean and std on X for later scaling."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`set_params <sklearn.preprocessing.StandardScaler.set_params>`\\ "
"(\\*\\*params)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Set the parameters of this estimator."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`transform <sklearn.preprocessing.StandardScaler.transform>`\\ (X[, "
"y, copy])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Perform standardization by centering and scaling"
msgstr ""

#: :7 :15
msgid "**X** : {array-like, sparse matrix}, shape [n_samples, n_features]"
msgstr ""

#: :9 :17
msgid ""
"The data used to compute the mean and standard deviation used for later "
"scaling along the features axis."
msgstr ""

#: :12 :20
msgid "**y: Passthrough for ``Pipeline`` compatibility.** :"
msgstr ""

#: :5
msgid ""
"Fits transformer to X and y with optional parameters fit_params and "
"returns a transformed version of X."
msgstr ""

#: :10
msgid "**X** : numpy array of shape [n_samples, n_features]"
msgstr ""

#: :12
msgid "Training set."
msgstr ""

#: :14
msgid "**y** : numpy array of shape [n_samples]"
msgstr ""

#: :16
msgid "Target values."
msgstr ""

#: :20
msgid "**X_new** : numpy array of shape [n_samples, n_features_new]"
msgstr ""

#: :22
msgid "Transformed array."
msgstr ""

#: :7
msgid "**deep: boolean, optional** :"
msgstr ""

#: :9
msgid ""
"If True, will return the parameters for this estimator and contained "
"subobjects that are estimators."
msgstr ""

#: :14
msgid "**params** : mapping of string to any"
msgstr ""

#: :16
msgid "Parameter names mapped to their values."
msgstr ""

#: :7
msgid "**X** : array-like, shape [n_samples, n_features]"
msgstr ""

#: :9
msgid "The data used to scale along the features axis."
msgstr ""

#: :3
msgid ""
"Online computation of mean and std on X for later scaling. All of X is "
"processed as a single batch. This is intended for cases when `fit` is not"
" feasible due to very large number of `n_samples` or because X is read "
"from a continuous stream."
msgstr ""

#: :8
msgid ""
"The algorithm for incremental mean and std is given in Equation 1.5a,b in"
" Chan, Tony F., Gene H. Golub, and Randall J. LeVeque. \"Algorithms for "
"computing the sample variance: Analysis and recommendations.\" The "
"American Statistician 37.3 (1983): 242-247:"
msgstr ""

#: :5
msgid ""
"The method works on simple estimators as well as on nested objects (such "
"as pipelines). The former have parameters of the form "
"``<component>__<parameter>`` so that it's possible to update each "
"component of a nested object."
msgstr ""

#: :12
msgid "**self** :"
msgstr ""

#: :3
msgid ""
"DEPRECATED: Attribute ``std_`` will be removed in 0.19. Use ``scale_`` "
"instead"
msgstr ""

#: ../../modules/generated/sklearn.preprocessing.StandardScaler.examples:3
msgid "Examples using ``sklearn.preprocessing.StandardScaler``"
msgstr ""

#: ../../modules/generated/sklearn.preprocessing.StandardScaler.examples:25
msgid ":ref:`example_classification_plot_classifier_comparison.py`"
msgstr ""

#: ../../modules/generated/sklearn.preprocessing.StandardScaler.examples:45
msgid ":ref:`example_cluster_plot_dbscan.py`"
msgstr ""

#: ../../modules/generated/sklearn.preprocessing.StandardScaler.examples:65
msgid ":ref:`example_cluster_plot_cluster_comparison.py`"
msgstr ""

#: ../../modules/generated/sklearn.preprocessing.StandardScaler.examples:85
msgid ":ref:`example_linear_model_plot_logistic_l1_l2_sparsity.py`"
msgstr ""

#: ../../modules/generated/sklearn.preprocessing.StandardScaler.examples:105
msgid ":ref:`example_linear_model_plot_sparse_recovery.py`"
msgstr ""

#: ../../modules/generated/sklearn.preprocessing.StandardScaler.examples:125
msgid ":ref:`example_preprocessing_plot_robust_scaling.py`"
msgstr ""

#: ../../modules/generated/sklearn.preprocessing.StandardScaler.examples:145
msgid ":ref:`example_svm_plot_rbf_parameters.py`"
msgstr ""

