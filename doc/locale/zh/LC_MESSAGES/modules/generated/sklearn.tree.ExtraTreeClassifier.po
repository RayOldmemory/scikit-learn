# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 - 2014, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.17\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-02-16 21:59+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.2.0\n"

#: ../../modules/generated/sklearn.tree.ExtraTreeClassifier.rst:2
msgid ":mod:`sklearn.tree`.ExtraTreeClassifier"
msgstr ""

#: :3
msgid "An extremely randomized tree classifier."
msgstr ""

#: :5
msgid ""
"Extra-trees differ from classic decision trees in the way they are built."
" When looking for the best split to separate the samples of a node into "
"two groups, random splits are drawn for each of the `max_features` "
"randomly selected features and the best split among those is chosen. When"
" `max_features` is set 1, this amounts to building a totally random "
"decision tree."
msgstr ""

#: :12
msgid "Warning: Extra-trees should only be used within ensemble methods."
msgstr ""

#: :14
msgid "Read more in the :ref:`User Guide <tree>`."
msgstr ""

#: :18
msgid ""
":obj:`ExtraTreeRegressor`, :obj:`ExtraTreesClassifier`, "
":obj:`ExtraTreesRegressor`"
msgstr ""

#: :21
msgid "References"
msgstr ""

#: :22
msgid ""
"P. Geurts, D. Ernst., and L. Wehenkel, \"Extremely randomized trees\", "
"Machine Learning, 63(1), 3-42, 2006."
msgstr ""

#: :30
msgid "Methods"
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`apply <sklearn.tree.ExtraTreeClassifier.apply>`\\ (X[, check_input])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Returns the index of the leaf that each sample is predicted as."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`fit <sklearn.tree.ExtraTreeClassifier.fit>`\\ (X, y[, "
"sample_weight, check_input, ...])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Build a decision tree from the training set (X, y)."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`fit_transform <sklearn.tree.ExtraTreeClassifier.fit_transform>`\\ "
"(X[, y])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Fit to data, then transform it."
msgstr ""

#: ../../<autosummary>:1
msgid ":obj:`get_params <sklearn.tree.ExtraTreeClassifier.get_params>`\\ ([deep])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Get parameters for this estimator."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`predict <sklearn.tree.ExtraTreeClassifier.predict>`\\ (X[, "
"check_input])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Predict class or regression value for X."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`predict_log_proba "
"<sklearn.tree.ExtraTreeClassifier.predict_log_proba>`\\ (X)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Predict class log-probabilities of the input samples X."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`predict_proba <sklearn.tree.ExtraTreeClassifier.predict_proba>`\\ "
"(X[, check_input])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Predict class probabilities of the input samples X."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`score <sklearn.tree.ExtraTreeClassifier.score>`\\ (X, y[, "
"sample_weight])"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Returns the mean accuracy on the given test data and labels."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`set_params <sklearn.tree.ExtraTreeClassifier.set_params>`\\ "
"(\\*\\*params)"
msgstr ""

#: ../../<autosummary>:1 :3
msgid "Set the parameters of this estimator."
msgstr ""

#: ../../<autosummary>:1
msgid ""
":obj:`transform <sklearn.tree.ExtraTreeClassifier.transform>`\\ (\\*args,"
" \\*\\*kwargs)"
msgstr ""

#: ../../<autosummary>:1
msgid ""
"DEPRECATED: Support to use estimators as feature selectors will be "
"removed in version 0.19."
msgstr ""

#: :9
msgid "**X** : array_like or sparse matrix, shape = [n_samples, n_features]"
msgstr ""

#: :11 :13 :9 :16
msgid ""
"The input samples. Internally, it will be converted to "
"``dtype=np.float32`` and if a sparse matrix is provided to a sparse "
"``csr_matrix``."
msgstr ""

#: :15 :27 :17
msgid "**check_input** : boolean, (default=True)"
msgstr ""

#: :17 :29 :19 :9
msgid ""
"Allow to bypass several input checking. Don't use this parameter unless "
"you know what you do."
msgstr ""

#: :22
msgid "**X_leaves** : array_like, shape = [n_samples,]"
msgstr ""

#: :24
msgid ""
"For each datapoint x in X, return the index of the leaf x ends up in. "
"Leaves are numbered within ``[0; self.tree_.node_count)``, possibly with "
"gaps in the numbering."
msgstr ""

#: :3
msgid "Return the feature importances."
msgstr ""

#: :5
msgid ""
"The importance of a feature is computed as the (normalized) total "
"reduction of the criterion brought by that feature. It is also known as "
"the Gini importance."
msgstr ""

#: :11
msgid "**feature_importances_** : array, shape = [n_features]"
msgstr ""

#: :7
msgid "**X** : array-like or sparse matrix, shape = [n_samples, n_features]"
msgstr ""

#: :9
msgid ""
"The training input samples. Internally, it will be converted to "
"``dtype=np.float32`` and if a sparse matrix is provided to a sparse "
"``csc_matrix``."
msgstr ""

#: :13
msgid "**y** : array-like, shape = [n_samples] or [n_samples, n_outputs]"
msgstr ""

#: :15
msgid ""
"The target values (class labels in classification, real numbers in "
"regression). In the regression case, use ``dtype=np.float64`` and "
"``order='C'`` for maximum efficiency."
msgstr ""

#: :19
msgid "**sample_weight** : array-like, shape = [n_samples] or None"
msgstr ""

#: :21
msgid ""
"Sample weights. If None, then samples are equally weighted. Splits that "
"would create child nodes with net zero or negative weight are ignored "
"while searching for a split in each node. In the case of classification, "
"splits are also ignored if they would result in any single class carrying"
" a negative weight in either child node."
msgstr ""

#: :32
msgid "**X_idx_sorted** : array-like, shape = [n_samples, n_features], optional"
msgstr ""

#: :34
msgid ""
"The indexes of the sorted training input samples. If many tree are grown "
"on the same dataset, this allows the ordering to be cached between trees."
" If None, the data will be sorted here. Don't use this parameter unless "
"you know what to do."
msgstr ""

#: :41
msgid "**self** : object"
msgstr ""

#: :43
msgid "Returns self."
msgstr ""

#: :5
msgid ""
"Fits transformer to X and y with optional parameters fit_params and "
"returns a transformed version of X."
msgstr ""

#: :10
msgid "**X** : numpy array of shape [n_samples, n_features]"
msgstr ""

#: :12
msgid "Training set."
msgstr ""

#: :14
msgid "**y** : numpy array of shape [n_samples]"
msgstr ""

#: :16
msgid "Target values."
msgstr ""

#: :20
msgid "**X_new** : numpy array of shape [n_samples, n_features_new]"
msgstr ""

#: :22
msgid "Transformed array."
msgstr ""

#: :7
msgid "**deep: boolean, optional** :"
msgstr ""

#: :9
msgid ""
"If True, will return the parameters for this estimator and contained "
"subobjects that are estimators."
msgstr ""

#: :14
msgid "**params** : mapping of string to any"
msgstr ""

#: :16
msgid "Parameter names mapped to their values."
msgstr ""

#: :5
msgid ""
"For a classification model, the predicted class for each sample in X is "
"returned. For a regression model, the predicted value based on X is "
"returned."
msgstr ""

#: :11 :7 :14
msgid "**X** : array-like or sparse matrix of shape = [n_samples, n_features]"
msgstr ""

#: :24
msgid "**y** : array of shape = [n_samples] or [n_samples, n_outputs]"
msgstr ""

#: :26
msgid "The predicted classes, or the predict values."
msgstr ""

#: :15 :22
msgid "**p** : array of shape = [n_samples, n_classes], or a list of n_outputs"
msgstr ""

#: :17
msgid ""
"such arrays if n_outputs > 1. The class log-probabilities of the input "
"samples. The order of the classes corresponds to that in the attribute "
"`classes_`."
msgstr ""

#: :5
msgid ""
"The predicted class probability is the fraction of samples of the same "
"class in a leaf."
msgstr ""

#: :10
msgid "check_input"
msgstr ""

#: :9
msgid "boolean, (default=True)"
msgstr ""

#: :24
msgid ""
"such arrays if n_outputs > 1. The class probabilities of the input "
"samples. The order of the classes corresponds to that in the attribute "
"`classes_`."
msgstr ""

#: :5
msgid ""
"In multi-label classification, this is the subset accuracy which is a "
"harsh metric since you require for each sample that each label set be "
"correctly predicted."
msgstr ""

#: :11
msgid "**X** : array-like, shape = (n_samples, n_features)"
msgstr ""

#: :13
msgid "Test samples."
msgstr ""

#: :15
msgid "**y** : array-like, shape = (n_samples) or (n_samples, n_outputs)"
msgstr ""

#: :17
msgid "True labels for X."
msgstr ""

#: :19
msgid "**sample_weight** : array-like, shape = [n_samples], optional"
msgstr ""

#: :21
msgid "Sample weights."
msgstr ""

#: :25
msgid "**score** : float"
msgstr ""

#: :27
msgid "Mean accuracy of self.predict(X) wrt. y."
msgstr ""

#: :5
msgid ""
"The method works on simple estimators as well as on nested objects (such "
"as pipelines). The former have parameters of the form "
"``<component>__<parameter>`` so that it's possible to update each "
"component of a nested object."
msgstr ""

#: :12
msgid "**self** :"
msgstr ""

#: :3
msgid ""
"DEPRECATED: Support to use estimators as feature selectors will be "
"removed in version 0.19. Use SelectFromModel instead."
msgstr ""

#: :5
msgid "Reduce X to its most important features."
msgstr ""

#: :7
msgid ""
"Uses ``coef_`` or ``feature_importances_`` to determine the most "
"important features.  For models with a ``coef_`` for each class, the "
"absolute sum over the classes is used."
msgstr ""

#: :13
msgid "**X** : array or scipy sparse matrix of shape [n_samples, n_features]"
msgstr ""

#: :15
msgid "The input samples."
msgstr ""

#: :24
msgid "threshold"
msgstr ""

#: :23
msgid "string, float or None, optional (default=None)"
msgstr ""

#: :18
msgid ""
"The threshold value to use for feature selection. Features whose "
"importance is greater or equal are kept while the others are discarded. "
"If \"median\" (resp. \"mean\"), then the threshold value is the median "
"(resp. the mean) of the feature importances. A scaling factor (e.g., "
"\"1.25*mean\") may also be used. If None and if available, the object "
"attribute ``threshold`` is used. Otherwise, \"mean\" is used by default."
msgstr ""

#: :28
msgid "**X_r** : array of shape [n_samples, n_selected_features]"
msgstr ""

#: :30
msgid "The input samples with only the selected features."
msgstr ""

