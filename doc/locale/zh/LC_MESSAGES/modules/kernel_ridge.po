# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 - 2014, scikit-learn developers (BSD License)
# This file is distributed under the same license as the scikit-learn
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: scikit-learn 0.17\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-02-16 21:59+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.2.0\n"

#: ../../modules/kernel_ridge.rst:5
msgid "Kernel ridge regression"
msgstr ""

#: ../../modules/kernel_ridge.rst:9
msgid ""
"Kernel ridge regression (KRR) [M2012]_ combines :ref:`ridge_regression` "
"(linear least squares with l2-norm regularization) with the kernel trick."
" It thus learns a linear function in the space induced by the respective "
"kernel and the data. For non-linear kernels, this corresponds to a non-"
"linear function in the original space."
msgstr ""

#: ../../modules/kernel_ridge.rst:15
msgid ""
"The form of the model learned by :class:`KernelRidge` is identical to "
"support vector regression (:class:`SVR`). However, different loss "
"functions are used: KRR uses squared error loss while support vector "
"regression uses :math:`\\epsilon`-insensitive loss, both combined with l2"
" regularization.  In contrast to :class:`SVR`, fitting "
":class:`KernelRidge` can be done in closed-form and is typically faster "
"for medium-sized datasets. On the other hand, the learned model is non-"
"sparse and thus slower than SVR, which learns a sparse model for "
":math:`\\epsilon > 0`, at prediction-time."
msgstr ""

#: ../../modules/kernel_ridge.rst:24
msgid ""
"The following figure compares :class:`KernelRidge` and :class:`SVR` on an"
" artificial dataset, which consists of a sinusoidal target function and "
"strong noise added to every fifth datapoint. The learned model of "
":class:`KernelRidge` and :class:`SVR` is plotted, where both "
"complexity/regularization and bandwidth of the RBF kernel have been "
"optimized using grid-search. The learned functions are very similar; "
"however, fitting :class:`KernelRidge` is approx. seven times faster than "
"fitting :class:`SVR` (both with grid-search). However, prediction of "
"100000 target values is more than three times faster with SVR since it "
"has learned a sparse model using only approx. 1/3 of the 100 training "
"datapoints as support vectors."
msgstr ""

#: ../../modules/kernel_ridge.rst:39
msgid ""
"The next figure compares the time for fitting and prediction of "
":class:`KernelRidge` and :class:`SVR` for different sizes of the training"
" set. Fitting :class:`KernelRidge` is faster than :class:`SVR` for "
"medium-sized training sets (less than 1000 samples); however, for larger "
"training sets :class:`SVR` scales better. With regard to prediction time,"
" :class:`SVR` is faster than :class:`KernelRidge` for all sizes of the "
"training set because of the learned sparse solution. Note that the degree"
" of sparsity and thus the prediction time depends on the parameters "
":math:`\\epsilon` and :math:`C` of the :class:`SVR`; :math:`\\epsilon = "
"0` would correspond to a dense model."
msgstr ""

#: ../../modules/kernel_ridge.rst
msgid "References:"
msgstr ""

#: ../../modules/kernel_ridge.rst:56
msgid ""
"\"Machine Learning: A Probabilistic Perspective\" Murphy, K. P. - chapter"
" 14.4.3, pp. 492-493, The MIT Press, 2012"
msgstr ""

